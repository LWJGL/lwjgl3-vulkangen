From 195c24417eb9a017760182d42514b3e1fdd48a7c Mon Sep 17 00:00:00 2001
From: Ioannis Tsakpinis <iotsakp@gmail.com>
Date: Wed, 20 Sep 2017 13:33:00 +0300
Subject: [PATCH] LWJGL fixes

---
 doc/specs/vulkan/appendices/VK_AMD_negative_viewport_height.txt     | 2 ++
 .../chapters/VK_KHR_display_swapchain/create_shared_swapchains.txt  | 2 +-
 .../vulkan/chapters/VK_NVX_device_generated_commands/generation.txt | 2 +-
 .../vulkan/chapters/VK_NV_clip_space_w_scaling/vertexpostproc.txt   | 2 +-
 doc/specs/vulkan/chapters/features.txt                              | 4 ++--
 doc/specs/vulkan/chapters/primsrast.txt                             | 2 +-
 src/spec/vk.xml                                                     | 6 +++---
 7 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/doc/specs/vulkan/appendices/VK_AMD_negative_viewport_height.txt b/doc/specs/vulkan/appendices/VK_AMD_negative_viewport_height.txt
index 4dcf770..37469fa 100755
--- a/doc/specs/vulkan/appendices/VK_AMD_negative_viewport_height.txt
+++ b/doc/specs/vulkan/appendices/VK_AMD_negative_viewport_height.txt
@@ -13,5 +13,7 @@ include::meta/VK_AMD_negative_viewport_height.txt[]
 This extension allows an application to specify a negative viewport height.
 The result is that the viewport transformation will flip along the y-axis.

+=== Version History
+
  * Revision 1, 2016-09-02 (Matthaeus Chajdas)
    - Initial draft
diff --git a/doc/specs/vulkan/chapters/VK_KHR_display_swapchain/create_shared_swapchains.txt b/doc/specs/vulkan/chapters/VK_KHR_display_swapchain/create_shared_swapchains.txt
index 49ea748..f9efe1d 100644
--- a/doc/specs/vulkan/chapters/VK_KHR_display_swapchain/create_shared_swapchains.txt
+++ b/doc/specs/vulkan/chapters/VK_KHR_display_swapchain/create_shared_swapchains.txt
@@ -23,7 +23,7 @@ include::../../api/protos/vkCreateSharedSwapchainsKHR.txt[]
   * pname:pSwapchains is a pointer to an array of sname:VkSwapchainKHR
     handles in which the created swapchain objects will be returned.

-fname:vkCreateSharedSwapchains is similar to flink:vkCreateSwapchainKHR,
+fname:vkCreateSharedSwapchainsKHR is similar to flink:vkCreateSwapchainKHR,
 except that it takes an array of sname:VkSwapchainCreateInfoKHR structures,
 and returns an array of swapchain objects.

diff --git a/doc/specs/vulkan/chapters/VK_NVX_device_generated_commands/generation.txt b/doc/specs/vulkan/chapters/VK_NVX_device_generated_commands/generation.txt
index 3b31259..c6c922d 100644
--- a/doc/specs/vulkan/chapters/VK_NVX_device_generated_commands/generation.txt
+++ b/doc/specs/vulkan/chapters/VK_NVX_device_generated_commands/generation.txt
@@ -105,7 +105,7 @@ include::../../api/structs/VkCmdProcessCommandsInfoNVX.txt[]
     pname:sequencesCountBuffer where the count value is stored.
   * pname:sequencesIndexBuffer must: be set if
     pname:indirectCommandsLayout's
-    ename:VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT is set and
+    ename:VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX is set and
     provides the used sequence indices as ftext:uint32_t array.
     Otherwise it must: be dlink:VK_NULL_HANDLE.
   * pname:sequencesIndexOffset is the byte offset into
diff --git a/doc/specs/vulkan/chapters/VK_NV_clip_space_w_scaling/vertexpostproc.txt b/doc/specs/vulkan/chapters/VK_NV_clip_space_w_scaling/vertexpostproc.txt
index c5c09b5..e973277 100644
--- a/doc/specs/vulkan/chapters/VK_NV_clip_space_w_scaling/vertexpostproc.txt
+++ b/doc/specs/vulkan/chapters/VK_NV_clip_space_w_scaling/vertexpostproc.txt
@@ -25,7 +25,7 @@ include::../../api/structs/VkPipelineViewportWScalingStateCreateInfoNV.txt[]
     sname:VkViewportWScalingNV structures which define the W scaling
     parameters for the corresponding viewport.
     If the viewport W scaling state is dynamic, this member is ignored.
-  * If no element of the pname:pDynamicStates member of
+    If no element of the pname:pDynamicStates member of
     sname::VkPipelineViewportStateCreateInfo::pname:pDynamicState is
     ename:VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV, the
     pname:pViewportScalings member of a
diff --git a/doc/specs/vulkan/chapters/features.txt b/doc/specs/vulkan/chapters/features.txt
index e839578..d8b1a7e 100644
--- a/doc/specs/vulkan/chapters/features.txt
+++ b/doc/specs/vulkan/chapters/features.txt
@@ -3403,8 +3403,8 @@ ifdef::VK_KHR_sampler_ycbcr_conversion[]
     plane 1, and a 16-bit R component in each 16-bit word of plane 2.
     The horizontal and vertical dimensions of the R and B planes are halved
     relative to the image dimensions, and each R and B component is shared
-    with the G components for which latexmath:[\lfloor i_G \times 0.5\
-    rfloor = i_B = i_R] and latexmath:[\lfloor j_G \times 0.5 \rfloor = j_B
+    with the G components for which latexmath:[\lfloor i_G \times 0.5
+    \rfloor = i_B = i_R] and latexmath:[\lfloor j_G \times 0.5 \rfloor = j_B
     = j_R].
     The location of each plane when this image is in linear layout can be
     determined via vkGetImageSubresourceLayout, using
diff --git a/doc/specs/vulkan/chapters/primsrast.txt b/doc/specs/vulkan/chapters/primsrast.txt
index c3efe4a..14c41f4 100644
--- a/doc/specs/vulkan/chapters/primsrast.txt
+++ b/doc/specs/vulkan/chapters/primsrast.txt
@@ -1125,7 +1125,7 @@ is guaranteed to remain distinct throughout polygon rasterization and in the
 depth buffer.
 All pairs of fragments generated by the rasterization of two polygons with
 otherwise identical vertices, but [eq]#pname:z~f~# values that differ by
-$r$, will have distinct depth values.
+[eq]#r#, will have distinct depth values.

 For fixed-point depth buffer representations, [eq]#r# is constant throughout
 the range of the entire depth buffer.
diff --git a/src/spec/vk.xml b/src/spec/vk.xml
index f4182d8..0e15d56 100644
--- a/src/spec/vk.xml
+++ b/src/spec/vk.xml
@@ -140,7 +140,7 @@ private version is maintained in the 1.0 branch of the member gitlab server.
         <type requires="vk_platform" name="uint64_t"/>
         <type requires="vk_platform" name="int32_t"/>
         <type requires="vk_platform" name="size_t"/>
-        <type name="int"/>
+        <type requires="vk_platform" name="int"/>

             <comment>Bitmask types</comment>
         <type                                             category="bitmask">typedef <type>VkFlags</type> <name>VkFramebufferCreateFlags</name>;</type>
@@ -584,9 +584,9 @@ private version is maintained in the 1.0 branch of the member gitlab server.
         </type>
         <type category="struct" name="VkPhysicalDeviceMemoryProperties" returnedonly="true">
             <member><type>uint32_t</type>               <name>memoryTypeCount</name></member>
-            <member><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
+            <member len="memoryTypeCount"><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
             <member><type>uint32_t</type>               <name>memoryHeapCount</name></member>
-            <member><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
+            <member len="memoryHeapCount"><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
         </type>
         <type category="struct" name="VkMemoryAllocateInfo">
             <member values="VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"><type>VkStructureType</type> <name>sType</name></member>
--
2.14.1.windows.1

