From dd85ce2f03d9126dbff939b9af8092040794c466 Mon Sep 17 00:00:00 2001
From: Ioannis Tsakpinis <iotsakp@gmail.com>
Date: Sat, 28 Aug 2021 21:24:50 +0300
Subject: [PATCH] LWJGL fixes

---
 .gitignore                                    | 19 ++++++++++------
 Makefile                                      |  2 +-
 appendices/VK_EXT_debug_report.txt            | 22 -------------------
 appendices/VK_EXT_texel_buffer_alignment.txt  |  1 -
 appendices/VK_INTEL_performance_query.txt     |  2 +-
 .../VK_KHR_pipeline_executable_properties.txt |  1 -
 .../VK_NV_device_diagnostics_config.txt       |  2 +-
 .../PresentTimeInfo.txt                       |  2 ++
 .../VK_INTEL_performance_query/queries.txt    | 10 ++++-----
 chapters/VK_KHR_display/display.txt           |  4 ++--
 .../queriesperformance.txt                    |  2 ++
 chapters/VK_KHR_swapchain/wsi.txt             |  6 ++---
 .../platformCreateSurface_macos.txt           | 20 ++++++++---------
 .../indirectcommands.txt                      |  2 +-
 chapters/capabilities.txt                     |  4 +++-
 chapters/features.txt                         | 12 +++++-----
 chapters/limits.txt                           |  2 +-
 chapters/memory.txt                           |  2 ++
 chapters/video_decode_h265_extensions.txt     |  8 +++----
 makeSpec                                      | 14 ++++++++++++
 scripts/extensionmetadocgenerator.py          |  4 ++--
 scripts/reflib.py                             | 14 ++++++++++++
 xml/vk.xml                                    | 19 ++++++++--------
 23 files changed, 96 insertions(+), 78 deletions(-)

diff --git a/.gitignore b/.gitignore
index 787cb5b3..6187aba0 100644
--- a/.gitignore
+++ b/.gitignore
@@ -47,14 +47,19 @@ __pycache__
 # Spec build generated, temporary, and output files

 # Files generated from vk.xml
-/gen/
-/gencore/
+#/gen/
+#/gencore/
+/gen/api.py
+/gen/out/
+/gen/refpage/refpage.log
+/gen/spirvcap/
+timeMarker

 # Files generated by extraction from spec source
-man/PFN*.txt
-man/A[A-Z][a-z]*.txt
-man/[Vv][Kk]*.txt
-man/apispec.txt
+#man/PFN*.txt
+#man/A[A-Z][a-z]*.txt
+#man/[Vv][Kk]*.txt
+#man/apispec.txt
 man/logfile
 man/CAMetalLayer.txt
 man/WSIheaders.txt
@@ -75,7 +80,7 @@ xml/diag.txt
 .DS_Store

 # Auto-generated files
-# */timeMarker
+*/timeMarker

 # check_spec_links (and its tests) output
 applyfixes.sh
diff --git a/Makefile b/Makefile
index c9929c5b..09e6da30 100644
--- a/Makefile
+++ b/Makefile
@@ -461,7 +461,7 @@ manhtmlpages: $(REFPATH)/apispec.txt $(GENDEPENDS)
 	$(QUIET) echo "manhtmlpages: building HTML refpages with these options:"
 	$(QUIET) echo $(ASCIIDOC) -b html5 $(ADOCOPTS) $(ADOCHTMLOPTS) \
 	    $(ADOCREFOPTS) -d manpage -o REFPAGE.html REFPAGE.txt
-	$(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages
+# $(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages

 # Build the individual refpages, then the symbolic links from aliases
 MANHTMLDIR  = $(OUTDIR)/man/html
diff --git a/appendices/VK_EXT_debug_report.txt b/appendices/VK_EXT_debug_report.txt
index 8a2e6fd2..9f3dc622 100644
--- a/appendices/VK_EXT_debug_report.txt
+++ b/appendices/VK_EXT_debug_report.txt
@@ -91,28 +91,6 @@ happens and the third will log warnings to stdout.
     vkDestroyDebugReportCallbackEXT(instance, cb3);
 ------------------------------------------------------------------------------

-[NOTE]
-.Note
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT was used.
-Starting in version 2 of the extension branch,
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-
-[NOTE]
-.Note
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT was used.
-Starting in version 8 of the extension branch,
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-

 === Issues

diff --git a/appendices/VK_EXT_texel_buffer_alignment.txt b/appendices/VK_EXT_texel_buffer_alignment.txt
index af5ca5a5..8d893c7d 100644
--- a/appendices/VK_EXT_texel_buffer_alignment.txt
+++ b/appendices/VK_EXT_texel_buffer_alignment.txt
@@ -10,7 +10,6 @@ include::{generated}/meta/{refprefix}VK_EXT_texel_buffer_alignment.txt[]
     2019-06-06
 *IP Status*::
     No known IP claims.
-*Interactions and External Dependencies*::
 *Contributors*::
   - Jeff Bolz, NVIDIA

diff --git a/appendices/VK_INTEL_performance_query.txt b/appendices/VK_INTEL_performance_query.txt
index 723710fa..2b31aaf0 100644
--- a/appendices/VK_INTEL_performance_query.txt
+++ b/appendices/VK_INTEL_performance_query.txt
@@ -22,7 +22,7 @@ interpreted by a external application or library.
 Such a library is available at : https://github.com/intel/metrics-discovery

 Performance analysis tools such as
-link:++https://software.intel.com/content/www/us/en/develop/tools/graphics-performance-analyzers.html++[Graphics
+link:https://software.intel.com/content/www/us/en/develop/tools/graphics-performance-analyzers.html[Graphics
 Performance Analyzers] make use of this extension and the metrics-discovery
 library to present the data in a human readable way.

diff --git a/appendices/VK_KHR_pipeline_executable_properties.txt b/appendices/VK_KHR_pipeline_executable_properties.txt
index 0ffbf2e9..93ca249c 100644
--- a/appendices/VK_KHR_pipeline_executable_properties.txt
+++ b/appendices/VK_KHR_pipeline_executable_properties.txt
@@ -10,7 +10,6 @@ include::{generated}/meta/{refprefix}VK_KHR_pipeline_executable_properties.txt[]
     2019-05-28
 *IP Status*::
     No known IP claims.
-*Interactions and External Dependencies*::
 *Contributors*::
   - Jason Ekstrand, Intel
   - Ian Romanick, Intel
diff --git a/appendices/VK_NV_device_diagnostics_config.txt b/appendices/VK_NV_device_diagnostics_config.txt
index 1bd1d1c2..33a8fc6d 100644
--- a/appendices/VK_NV_device_diagnostics_config.txt
+++ b/appendices/VK_NV_device_diagnostics_config.txt
@@ -14,7 +14,7 @@ include::{generated}/meta/{refprefix}VK_NV_device_diagnostics_config.txt[]

 === Description

-Applications using Nvidia Nsight^(TM)^ Aftermath SDK for Vulkan to integrate
+Applications using Nvidia Nsight(TM) Aftermath SDK for Vulkan to integrate
 device crash dumps into their error reporting mechanisms, may: use this
 extension to configure options related to device crash dump creation.

diff --git a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.txt b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.txt
index 062abbec..266111c2 100644
--- a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.txt
+++ b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.txt
@@ -66,4 +66,6 @@ include::{generated}/api/structs/VkPresentTimeGOOGLE.txt[]
     image at any time.
     This is useful when the application desires to provide pname:presentID,
     but does not need a specific pname:desiredPresentTime.
+
+include::{generated}/validity/structs/VkPresentTimeGOOGLE.txt[]
 --
diff --git a/chapters/VK_INTEL_performance_query/queries.txt b/chapters/VK_INTEL_performance_query/queries.txt
index 1b750a87..51872232 100644
--- a/chapters/VK_INTEL_performance_query/queries.txt
+++ b/chapters/VK_INTEL_performance_query/queries.txt
@@ -123,11 +123,11 @@ The sname:VkPerformanceValueDataINTEL union is defined as:

 include::{generated}/api/structs/VkPerformanceValueDataINTEL.txt[]

-  * pname:data.value32 represents 32-bit integer data.
-  * pname:data.value64 represents 64-bit integer data.
-  * pname:data.valueFloat represents floating-point data.
-  * pname:data.valueBool represents basetype:Bool32 data.
-  * pname:data.valueString represents a pointer to a null-terminated UTF-8
+  * pname:value32 represents 32-bit integer data.
+  * pname:value64 represents 64-bit integer data.
+  * pname:valueFloat represents floating-point data.
+  * pname:valueBool represents basetype:Bool32 data.
+  * pname:valueString represents a pointer to a null-terminated UTF-8
     string.

 The correct member of the union is determined by the associated
diff --git a/chapters/VK_KHR_display/display.txt b/chapters/VK_KHR_display/display.txt
index ad9433c7..558bed8b 100644
--- a/chapters/VK_KHR_display/display.txt
+++ b/chapters/VK_KHR_display/display.txt
@@ -71,7 +71,7 @@ include::{generated}/api/structs/VkDisplayPropertiesKHR.txt[]
     visible portion of the display, in millimeters.
   * pname:physicalResolution describes the physical, native, or preferred
     resolution of the display.
-
++
 [NOTE]
 .Note
 ====
@@ -90,7 +90,7 @@ should: return the maximum resolution supported.
     self-refresh/internal buffering.
     If this is true, the application can: submit persistent present
     operations on swapchains created against this display.
-
++
 [NOTE]
 .Note
 ====
diff --git a/chapters/VK_KHR_performance_query/queriesperformance.txt b/chapters/VK_KHR_performance_query/queriesperformance.txt
index 28364505..c8d1c3af 100644
--- a/chapters/VK_KHR_performance_query/queriesperformance.txt
+++ b/chapters/VK_KHR_performance_query/queriesperformance.txt
@@ -70,6 +70,8 @@ The slink:VkPerformanceCounterKHR::pname:unit enumeration specifies how to
 parse the counter data.

 include::{generated}/api/structs/VkPerformanceCounterResultKHR.txt[]
+
+include::{generated}/validity/structs/VkPerformanceCounterResultKHR.txt[]
 --


diff --git a/chapters/VK_KHR_swapchain/wsi.txt b/chapters/VK_KHR_swapchain/wsi.txt
index 966ec7fc..2b89fcce 100644
--- a/chapters/VK_KHR_swapchain/wsi.txt
+++ b/chapters/VK_KHR_swapchain/wsi.txt
@@ -232,20 +232,20 @@ effects that require them to run for all pixels in the presentable image.
     Providing a valid pname:oldSwapchain may: aid in the resource reuse, and
     also allows the application to still present any images that are already
     acquired from it.
-
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, pname:oldSwapchain is retired -- even if creation
 of the new swapchain fails.
 The new swapchain is created in the non-retired state whether or not
 pname:oldSwapchain is dlink:VK_NULL_HANDLE.
-
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, any images from pname:oldSwapchain that are not
 acquired by the application may: be freed by the implementation, which may:
 occur even if creation of the new swapchain fails.
 The application can: destroy pname:oldSwapchain to free all memory
 associated with pname:oldSwapchain.
-
++
 [NOTE]
 .Note
 ====
diff --git a/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.txt b/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.txt
index 2e16e689..4a033457 100644
--- a/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.txt
+++ b/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.txt
@@ -12,16 +12,6 @@ basetype:CAMetalLayer, call:

 include::{generated}/api/protos/vkCreateMacOSSurfaceMVK.txt[]

-ifdef::VK_EXT_metal_surface[]
-[NOTE]
-.Note
-====
-The `vkCreateMacOSSurfaceMVK` function is considered deprecated and has been
-superseded by flink:vkCreateMetalSurfaceEXT from the
-`apiext:VK_EXT_metal_surface` extension.
-====
-endif::VK_EXT_metal_surface[]
-
   * pname:instance is the instance with which to associate the surface.
   * pname:pCreateInfo is a pointer to a slink:VkMacOSSurfaceCreateInfoMVK
     structure containing parameters affecting the creation of the surface
@@ -32,6 +22,16 @@ endif::VK_EXT_metal_surface[]
   * pname:pSurface is a pointer to a slink:VkSurfaceKHR handle in which the
     created surface object is returned.

+ifdef::VK_EXT_metal_surface[]
+[NOTE]
+.Note
+====
+The `vkCreateMacOSSurfaceMVK` function is considered deprecated and has been
+superseded by flink:vkCreateMetalSurfaceEXT from the
+`apiext:VK_EXT_metal_surface` extension.
+====
+endif::VK_EXT_metal_surface[]
+
 include::{generated}/validity/protos/vkCreateMacOSSurfaceMVK.txt[]
 --

diff --git a/chapters/VK_NV_device_generated_commands/indirectcommands.txt b/chapters/VK_NV_device_generated_commands/indirectcommands.txt
index 45d48ade..ad58daa2 100644
--- a/chapters/VK_NV_device_generated_commands/indirectcommands.txt
+++ b/chapters/VK_NV_device_generated_commands/indirectcommands.txt
@@ -119,7 +119,7 @@ void cmdProcessAllSequences(cmd, pipeline, indirectCommandsLayout, pIndirectComm
     pname:streamCount must: be greater than `0` and less or equal to
     sname:VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV::pname:maxIndirectCommandsStreamCount
   * [[VUID-VkIndirectCommandsLayoutCreateInfoNV-pStreamStrides-02937]]
-    each element of pname:pStreamStrides must: be greater than `0`and less
+    each element of pname:pStreamStrides must: be greater than `0` and less
     than or equal to
     sname:VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV::pname:maxIndirectCommandsStreamStride.
     Furthermore the alignment of each token input must: be ensured
diff --git a/chapters/capabilities.txt b/chapters/capabilities.txt
index 2ae5c483..f6da696b 100644
--- a/chapters/capabilities.txt
+++ b/chapters/capabilities.txt
@@ -135,7 +135,7 @@ ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
      sampler Y'C~B~C~R~ conversion>>
 endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
 ifdef::VK_EXT_image_drm_format_modifier[]
-  * If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
+  ** If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
     pname:maxArrayLayers must: not be 0.
 endif::VK_EXT_image_drm_format_modifier[]
   * pname:sampleCounts is a bitmask of elink:VkSampleCountFlagBits
@@ -1273,7 +1273,9 @@ following table:
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT | No restriction | No restriction
+ifdef::VK_FUCHSIA_external_semaphore[]
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA | No restriction | No restriction
+endif::VK_FUCHSIA_external_semaphore[]
 |====
 --

diff --git a/chapters/features.txt b/chapters/features.txt
index 79cc909d..079b7aa2 100644
--- a/chapters/features.txt
+++ b/chapters/features.txt
@@ -1039,8 +1039,7 @@ include::{chapters}/features.txt[tag=VK_KHR_vulkan_memory_model-features]
     from vertex or tessellation evaluation shaders.
     If this feature is not enabled, the code:Layer built-in decoration must:
     not be used on outputs in vertex or tessellation evaluation shaders.
-  * [[features-subgroupBroadcastDynamicId]] If
-    pname:subgroupBroadcastDynamicId is ename:VK_TRUE, the "`Id`" operand of
+  * [[features-subgroupBroadcastDynamicId]] pname:subgroupBroadcastDynamicId if ename:VK_TRUE, the "`Id`" operand of
     code:OpGroupNonUniformBroadcast can: be dynamically uniform within a
     subgroup, and the "`Index`" operand of
     code:OpGroupNonUniformQuadBroadcast can: be dynamically uniform within
@@ -2232,7 +2231,7 @@ This structure describes the following features:

 See <<shaders-scope-quad, Quad shader scope>> for more information.

-:refpage: VkPhysicalDeviceComputeShaderDerivativesFeaturesNVfeatures.
+:refpage: VkPhysicalDeviceComputeShaderDerivativesFeaturesNV
 include::{chapters}/features.txt[tag=features]

 include::{generated}/validity/structs/VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.txt[]
@@ -2936,7 +2935,7 @@ This structure describes the following feature:
     indicates that the implementation supports the
     code:IntegerFunctions2INTEL SPIR-V capability.

-:refpage: VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTELfeatures.
+:refpage: VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL
 include::{chapters}/features.txt[tag=features]

 include::{generated}/validity/structs/VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL.txt[]
@@ -4082,14 +4081,15 @@ This structure describes the following feature:
     that the implementation must: support using the elink:VkDescriptorType
     of ename:VK_DESCRIPTOR_TYPE_MUTABLE_VALVE with at least the following
     descriptor types, where any combination of the types must: be supported:
++
   ** ename:VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER
-
-  * Additionally, pname:mutableDescriptorType indicates that:
++
+Additionally, pname:mutableDescriptorType indicates that:
 ifdef::VK_VERSION_1_2,VK_EXT_descriptor_indexing[]
   ** Non-uniform descriptor indexing must: be supported if all descriptor
      types in a slink:VkMutableDescriptorTypeListVALVE for
diff --git a/chapters/limits.txt b/chapters/limits.txt
index 1e0d99f3..4106b5ac 100644
--- a/chapters/limits.txt
+++ b/chapters/limits.txt
@@ -1282,7 +1282,7 @@ ifndef::VK_VERSION_1_2[:anchor-prefix:]
 include::{chapters}/limits.txt[tag=limits_desc]

 If pname:supportedOperations includes <<features-subgroup-quad,
-ename:VK_SUBGROUP_FEATURE_QUAD_BIT,>>
+ename:VK_SUBGROUP_FEATURE_QUAD_BIT>>,
 ifdef::VK_KHR_shader_subgroup_uniform_control_flow[]
 or <<features-shaderSubgroupUniformControlFlow,
 pname:shaderSubgroupUniformControlFlow>> is enabled,
diff --git a/chapters/memory.txt b/chapters/memory.txt
index 15ba95f9..9301ef43 100644
--- a/chapters/memory.txt
+++ b/chapters/memory.txt
@@ -230,6 +230,8 @@ include::{generated}/api/funcpointers/PFN_vkInternalFreeNotification.txt[]
   * pname:allocationScope is a elink:VkSystemAllocationScope value
     specifying the allocation scope of the lifetime of the allocation, as
     described <<memory-host-allocation-scope,here>>.
+
+This is a purely informational callback.
 --

 [open,refpage='VkSystemAllocationScope',desc='Allocation scope',type='enums',xrefs='VkAllocationCallbacks']
diff --git a/chapters/video_decode_h265_extensions.txt b/chapters/video_decode_h265_extensions.txt
index 586a41d8..ba540cc8 100644
--- a/chapters/video_decode_h265_extensions.txt
+++ b/chapters/video_decode_h265_extensions.txt
@@ -58,10 +58,6 @@ slink:VkVideoProfileKHR field of slink:VkVideoSessionCreateInfoKHR.

 [open,refpage='VkVideoDecodeH265CapabilitiesEXT',desc='Structure specifies H.265 decode capabilities parameters when decoding a frame',type='structs']
 --
-The sname:VkVideoDecodeH265CapabilitiesEXT structure is defined as:
-
-include::{generated}/api/structs/VkVideoDecodeH265CapabilitiesEXT.txt[]
-
 When using flink:vkGetPhysicalDeviceVideoCapabilitiesKHR to query the
 capabilities for the parameter pname:videoCodecOperation specified as
 ename:VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_EXT, a
@@ -69,6 +65,10 @@ slink:VkVideoDecodeH265CapabilitiesEXT structure can: be chained to
 slink:VkVideoCapabilitiesKHR to return this H.265 extension specific
 capabilities.

+The slink:VkVideoDecodeH265CapabilitiesEXT structure is defined as:
+
+include::{generated}/api/structs/VkVideoDecodeH265CapabilitiesEXT.txt[]
+
   * pname:sType is the type of this structure.
   * pname:pNext is `NULL` or a pointer to a structure extending this
     structure.
diff --git a/makeSpec b/makeSpec
index c747d923..c865e88b 100755
--- a/makeSpec
+++ b/makeSpec
@@ -97,6 +97,20 @@ if __name__ == '__main__':
         title = 'with all registered extensions'
         exts = set(deps.allExtensions())

+    exts.remove('VK_ANDROID_external_memory_android_hardware_buffer')
+    exts.remove('VK_EXT_directfb_surface')
+    exts.remove('VK_FUCHSIA_buffer_collection')
+    exts.remove('VK_FUCHSIA_imagepipe_surface')
+    exts.remove('VK_FUCHSIA_external_memory')
+    exts.remove('VK_FUCHSIA_external_semaphore')
+    exts.remove('VK_GGP_frame_token')
+    exts.remove('VK_GGP_stream_descriptor_surface')
+    exts.remove('VK_KHR_android_surface')
+    exts.remove('VK_KHR_xcb_surface')
+    exts.remove('VK_MVK_ios_surface')
+    exts.remove('VK_NN_vi_surface')
+    exts.remove('VK_QNX_screen_surface')
+
     # List of explicitly requested extension and all its dependencies
     extraexts = set()
     for name in results.extension:
diff --git a/scripts/extensionmetadocgenerator.py b/scripts/extensionmetadocgenerator.py
index d973c757..94853456 100644
--- a/scripts/extensionmetadocgenerator.py
+++ b/scripts/extensionmetadocgenerator.py
@@ -263,12 +263,12 @@ class Extension:
                 write('  * Requires', self.conventions.formatExtension(dep),
                       file=fp)
         if self.provisional == 'true':
-            write('  * *This is a _provisional_ extension and must: be used with caution.', file=fp)
+            write('  * This is a _provisional_ extension and must: be used with caution.', file=fp)
             write('    See the ' +
                   self.specLink(xrefName = 'boilerplate-provisional-header',
                                 xrefText = 'description',
                                 isRefpage = isRefpage) +
-                  ' of provisional header files for enablement and stability details.*', file=fp)
+                  ' of provisional header files for enablement and stability details.', file=fp)
         write('', file=fp)

         if self.deprecationType:
diff --git a/scripts/reflib.py b/scripts/reflib.py
index 235a9389..27cdbcfd 100644
--- a/scripts/reflib.py
+++ b/scripts/reflib.py
@@ -219,6 +219,11 @@ def nextPara(file, line):
     maxLine = len(file) - 1
     # Skip over current paragraph
     while (line != maxLine and not isempty(file[line])):
+        # LWJGL: Skip note blocks (may contain empty lines)
+        if (file[line] == '====\n'):
+            line = line + 1
+            while (line != maxLine and file[line] != '====\n'):
+                line = line + 1
         line = line + 1
     # Skip over white space
     while (line != maxLine and isempty(file[line])):
@@ -262,6 +267,10 @@ def clampToBlock(line, minline, maxline):

     return line

+# LWJGL: body/Description block detection
+regexListItem = re.compile('^(?:[/]|\s+[^/])')
+regexAnchorPrefix = re.compile('^:anchor-prefix:$')
+
 def fixupRefs(pageMap, specFile, file):
     """Fill in missing fields in pageInfo structures, to the extent they can be
     inferred.
@@ -322,6 +331,11 @@ def fixupRefs(pageMap, specFile, file):
                 pi.param = nextPara(file, pi.include)
                 if pi.body is None:
                     pi.body = nextPara(file, pi.param)
+                    # LWJGL: body/Description block detection
+                    while regexListItem.match(file[pi.body]):
+                        pi.body = nextPara(file, pi.body)
+                    if regexAnchorPrefix.match(file[pi.body]):
+                        pi.body = nextPara(file, pi.body)
             else:
                 if pi.body is None:
                     pi.body = nextPara(file, pi.include)
diff --git a/xml/vk.xml b/xml/vk.xml
index 6a8d05e9..d83bb452 100644
--- a/xml/vk.xml
+++ b/xml/vk.xml
@@ -196,12 +196,13 @@ branch of the member gitlab server.

         <type category="basetype">struct <name>ANativeWindow</name>;</type>
         <type category="basetype">struct <name>AHardwareBuffer</name>;</type>
-        <type category="basetype">
+        <!--<type category="basetype">
 #ifdef __OBJC__
 @class CAMetalLayer;
 #else
 typedef void <name>CAMetalLayer</name>;
-#endif</type>
+#endif</type>-->
+        <type requires="QuartzCore.framework" name="CAMetalLayer"/>

         <type category="basetype">typedef <type>uint32_t</type> <name>VkSampleMask</name>;</type>
         <type category="basetype">typedef <type>uint32_t</type> <name>VkBool32</name>;</type>
@@ -224,7 +225,7 @@ typedef void <name>CAMetalLayer</name>;
         <type requires="vk_platform" name="int32_t"/>
         <type requires="vk_platform" name="int64_t"/>
         <type requires="vk_platform" name="size_t"/>
-        <type name="int"/>
+        <type requires="vk_platform" name="int"/>

             <comment>Bitmask types</comment>
         <type requires="VkFramebufferCreateFlagBits"      category="bitmask">typedef <type>VkFlags</type> <name>VkFramebufferCreateFlags</name>;</type>
@@ -927,9 +928,9 @@ typedef void <name>CAMetalLayer</name>;
         </type>
         <type category="struct" name="VkPhysicalDeviceMemoryProperties" returnedonly="true">
             <member><type>uint32_t</type>               <name>memoryTypeCount</name></member>
-            <member><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
+            <member len="memoryTypeCount"><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
             <member><type>uint32_t</type>               <name>memoryHeapCount</name></member>
-            <member><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
+            <member len="memoryHeapCount"><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
         </type>
         <type category="struct" name="VkMemoryAllocateInfo">
             <member values="VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"><type>VkStructureType</type> <name>sType</name></member>
@@ -4136,7 +4137,7 @@ typedef void <name>CAMetalLayer</name>;
         <type category="struct" name="VkAccelerationStructureInfoNV">
             <member values="VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true">const <type>void</type>*                            <name>pNext</name></member>
-            <member><type>VkAccelerationStructureTypeNV</type>         <name>type</name></member>
+            <member><type>VkAccelerationStructureTypeKHR</type>         <name>type</name></member>
             <member optional="true"><type>VkBuildAccelerationStructureFlagsNV</type><name>flags</name></member>
             <member optional="true"><type>uint32_t</type>               <name>instanceCount</name></member>
             <member optional="true"><type>uint32_t</type>               <name>geometryCount</name></member>
@@ -13605,7 +13606,7 @@ typedef void <name>CAMetalLayer</name>;
             </require>
             <require extension="VK_KHR_descriptor_update_template">
                 <command name="vkCmdPushDescriptorSetWithTemplateKHR"/>
-                <enum value="1" extends="VkDescriptorUpdateTemplateType"    name="VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR" comment="Create descriptor update template for pushed descriptor updates"/>
+                <!--<enum value="1" extends="VkDescriptorUpdateTemplateType"    name="VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR" comment="Create descriptor update template for pushed descriptor updates"/>-->
             </require>
         </extension>
         <extension name="VK_EXT_conditional_rendering" number="82" type="device" author="NV" contact="Vikram Kushwaha @vkushwaha" supported="vulkan">
@@ -15781,10 +15782,10 @@ typedef void <name>CAMetalLayer</name>;
                 <command                                                    name="vkGetPhysicalDeviceToolPropertiesEXT"/>
             </require>
             <require extension="VK_EXT_debug_report">
-                <enum bitpos="5" extends="VkToolPurposeFlagBitsEXT"         name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
+                <!--<enum bitpos="5" extends="VkToolPurposeFlagBitsEXT"         name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>-->
             </require>
             <require extension="VK_EXT_debug_marker">
-                <enum bitpos="6" extends="VkToolPurposeFlagBitsEXT"         name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>
+                <!--<enum bitpos="6" extends="VkToolPurposeFlagBitsEXT"         name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>-->
             </require>
             <require extension="VK_EXT_debug_utils">
                 <enum bitpos="5" extends="VkToolPurposeFlagBitsEXT"         name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
--
2.30.2.windows.1
