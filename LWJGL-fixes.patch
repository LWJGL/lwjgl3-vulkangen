From eed84f03c7e644643f684ade30a5f9c8b601edd9 Mon Sep 17 00:00:00 2001
From: Ioannis Tsakpinis <iotsakp@gmail.com>
Date: Wed, 12 Oct 2022 13:19:28 +0300
Subject: [PATCH] LWJGL fixes

---
 .gitignore                                    |   9 +-
 Makefile                                      |   2 +-
 appendices/VK_EXT_debug_report.adoc           |  20 ---
 appendices/VK_KHR_maintenance5.adoc           |   2 -
 appendices/VK_KHR_maintenance7.adoc           |   2 -
 ...VK_KHR_pipeline_executable_properties.adoc |   1 -
 .../VK_NV_device_diagnostics_config.adoc      |   2 +-
 .../PresentTimeInfo.adoc                      |   2 +
 .../VK_INTEL_performance_query/queries.adoc   |  10 +-
 chapters/VK_KHR_display/display.adoc          |   4 +-
 .../queriesperformance.adoc                   |   2 +
 chapters/VK_KHR_swapchain/wsi.adoc            |   6 +-
 chapters/capabilities.adoc                    |   4 +-
 chapters/devsandqueues.adoc                   |   2 -
 chapters/features.adoc                        |   5 +-
 chapters/limits.adoc                          |   8 --
 chapters/memory.adoc                          |   2 +
 config/attribs.adoc                           |   5 +-
 config/spec-macros.rb                         |   2 +-
 config/spec-macros/extension.rb               |   2 +-
 makeSpec                                      |  15 +++
 scripts/extensionmetadocgenerator.py          |  23 ++--
 scripts/parse_dependency.py                   |   8 +-
 scripts/reflib.py                             |  15 ++-
 scripts/validitygenerator.py                  |  17 +--
 scripts/vkconventions.py                      |   2 +-
 xml/vk.xml                                    | 121 +++++++++++++++---
 27 files changed, 196 insertions(+), 97 deletions(-)

diff --git a/.gitignore b/.gitignore
index ff3a7332..8ba18646 100644
--- a/.gitignore
+++ b/.gitignore
@@ -47,8 +47,13 @@ __pycache__
 # Spec build generated, temporary, and output files
 
 # Files generated from vk.xml
-/gen/
-/gencore/
+#/gen/
+#/gencore/
+/gen/api.py
+/gen/out/
+/gen/refpage/refpage.log
+/gen/spirvcap/
+timeMarker
 
 # Output files and directories
 gen/out/**
diff --git a/Makefile b/Makefile
index ed86fb91..b554395d 100644
--- a/Makefile
+++ b/Makefile
@@ -602,7 +602,7 @@ manhtmlpages: $(REFPATH)/apispec.adoc $(GENDEPENDS)
 	$(QUIET) echo "manhtmlpages: building HTML refpages with these options:"
 	$(QUIET) echo $(ASCIIDOC) -b html5 $(ADOCOPTS) $(ADOCHTMLOPTS) \
 	    $(ADOCREFOPTS) -d manpage -o REFPAGE.html REFPAGE.adoc
-	$(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages
+	#$(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages
 
 # Build the individual refpages, then the symbolic links from aliases
 MANHTMLDIR  = $(OUTDIR)/man/html
diff --git a/appendices/VK_EXT_debug_report.adoc b/appendices/VK_EXT_debug_report.adoc
index e0a6fc4b..a35422d2 100644
--- a/appendices/VK_EXT_debug_report.adoc
+++ b/appendices/VK_EXT_debug_report.adoc
@@ -92,26 +92,6 @@ happens and the third will log warnings to stdout.
     vkDestroyDebugReportCallbackEXT(instance, cb3);
 ----
 
-[NOTE]
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT was used.
-Starting in version 2 of the extension branch,
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-
-[NOTE]
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT was used.
-Starting in version 8 of the extension branch,
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-
 
 === Issues
 
diff --git a/appendices/VK_KHR_maintenance5.adoc b/appendices/VK_KHR_maintenance5.adoc
index b2d56118..7e103895 100644
--- a/appendices/VK_KHR_maintenance5.adoc
+++ b/appendices/VK_KHR_maintenance5.adoc
@@ -9,8 +9,6 @@ include::{generated}/meta/{refprefix}VK_KHR_maintenance5.adoc[]
 *Last Modified Date*::
     2023-05-02
 
-*Interactions and External Dependencies*::
-
 *Contributors*::
   - Stu Smith, AMD
   - Tobias Hector, AMD
diff --git a/appendices/VK_KHR_maintenance7.adoc b/appendices/VK_KHR_maintenance7.adoc
index a0a9e22e..8e9e273f 100644
--- a/appendices/VK_KHR_maintenance7.adoc
+++ b/appendices/VK_KHR_maintenance7.adoc
@@ -8,8 +8,6 @@ include::{generated}/meta/{refprefix}VK_KHR_maintenance7.adoc[]
 *Last Modified Date*::
     2024-01-30
 
-*Interactions and External Dependencies*::
-
 *Contributors*::
   - Mike Blumenkrantz, Valve
   - Hans-Kristian Arntzen, Valve
diff --git a/appendices/VK_KHR_pipeline_executable_properties.adoc b/appendices/VK_KHR_pipeline_executable_properties.adoc
index d710efe0..aef444da 100644
--- a/appendices/VK_KHR_pipeline_executable_properties.adoc
+++ b/appendices/VK_KHR_pipeline_executable_properties.adoc
@@ -10,7 +10,6 @@ include::{generated}/meta/{refprefix}VK_KHR_pipeline_executable_properties.adoc[
     2019-05-28
 *IP Status*::
     No known IP claims.
-*Interactions and External Dependencies*::
 *Contributors*::
   - Faith Ekstrand, Intel
   - Ian Romanick, Intel
diff --git a/appendices/VK_NV_device_diagnostics_config.adoc b/appendices/VK_NV_device_diagnostics_config.adoc
index 28d0280a..8faabcbf 100644
--- a/appendices/VK_NV_device_diagnostics_config.adoc
+++ b/appendices/VK_NV_device_diagnostics_config.adoc
@@ -14,7 +14,7 @@ include::{generated}/meta/{refprefix}VK_NV_device_diagnostics_config.adoc[]
 
 === Description
 
-Applications using Nvidia Nsight^(TM)^ Aftermath SDK for Vulkan to integrate
+Applications using Nvidia Nsight(TM) Aftermath SDK for Vulkan to integrate
 device crash dumps into their error reporting mechanisms, may: use this
 extension to configure options related to device crash dump creation.
 
diff --git a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
index 120a2a40..f8e0d29d 100644
--- a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
+++ b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
@@ -66,4 +66,6 @@ include::{generated}/api/structs/VkPresentTimeGOOGLE.adoc[]
     image at any time.
     This is useful when the application desires to provide pname:presentID,
     but does not need a specific pname:desiredPresentTime.
+
+include::{generated}/validity/structs/VkPresentTimeGOOGLE.adoc[]
 --
diff --git a/chapters/VK_INTEL_performance_query/queries.adoc b/chapters/VK_INTEL_performance_query/queries.adoc
index 2b2d9d59..7e976b07 100644
--- a/chapters/VK_INTEL_performance_query/queries.adoc
+++ b/chapters/VK_INTEL_performance_query/queries.adoc
@@ -123,11 +123,11 @@ The sname:VkPerformanceValueDataINTEL union is defined as:
 
 include::{generated}/api/structs/VkPerformanceValueDataINTEL.adoc[]
 
-  * pname:data.value32 represents 32-bit integer data.
-  * pname:data.value64 represents 64-bit integer data.
-  * pname:data.valueFloat represents floating-point data.
-  * pname:data.valueBool represents basetype:VkBool32 data.
-  * pname:data.valueString represents a pointer to a null-terminated UTF-8
+  * pname:value32 represents 32-bit integer data.
+  * pname:value64 represents 64-bit integer data.
+  * pname:valueFloat represents floating-point data.
+  * pname:valueBool represents basetype:VkBool32 data.
+  * pname:valueString represents a pointer to a null-terminated UTF-8
     string.
 
 The correct member of the union is determined by the associated
diff --git a/chapters/VK_KHR_display/display.adoc b/chapters/VK_KHR_display/display.adoc
index 0c9cd83b..83a574a9 100644
--- a/chapters/VK_KHR_display/display.adoc
+++ b/chapters/VK_KHR_display/display.adoc
@@ -75,7 +75,7 @@ include::{generated}/api/structs/VkDisplayPropertiesKHR.adoc[]
     visible portion of the display, in millimeters.
   * pname:physicalResolution describes the physical, native, or preferred
     resolution of the display.
-
++
 [NOTE]
 ====
 For devices which have no natural value to return here, implementations
@@ -93,7 +93,7 @@ should: return the maximum resolution supported.
     self-refresh/internal buffering.
     If this is true, the application can: submit persistent present
     operations on swapchains created against this display.
-
++
 [NOTE]
 ====
 Persistent presents may: have higher latency, and may: use less power when
diff --git a/chapters/VK_KHR_performance_query/queriesperformance.adoc b/chapters/VK_KHR_performance_query/queriesperformance.adoc
index f54b0557..d6a625c1 100644
--- a/chapters/VK_KHR_performance_query/queriesperformance.adoc
+++ b/chapters/VK_KHR_performance_query/queriesperformance.adoc
@@ -69,6 +69,8 @@ supplied in pname:pCounterIndices when creating the performance query.
 slink:VkPerformanceCounterKHR::pname:storage specifies how to parse the
 counter data.
 
+include::{generated}/api/structs/VkPerformanceCounterResultKHR.adoc[]
+
 include::{generated}/validity/structs/VkPerformanceCounterResultKHR.adoc[]
 --
 
diff --git a/chapters/VK_KHR_swapchain/wsi.adoc b/chapters/VK_KHR_swapchain/wsi.adoc
index e4f2f9c5..dc88cdde 100644
--- a/chapters/VK_KHR_swapchain/wsi.adoc
+++ b/chapters/VK_KHR_swapchain/wsi.adoc
@@ -350,21 +350,21 @@ ifndef::VKSC_VERSION_1_0[]
     also allows the application to still present any images that are already
     acquired from it.
 endif::VKSC_VERSION_1_0[]
-
 ifndef::VKSC_VERSION_1_0[]
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, pname:oldSwapchain is retired -- even if creation
 of the new swapchain fails.
 The new swapchain is created in the non-retired state whether or not
 pname:oldSwapchain is dlink:VK_NULL_HANDLE.
-
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, any images from pname:oldSwapchain that are not
 acquired by the application may: be freed by the implementation, which may:
 occur even if creation of the new swapchain fails.
 The application can: destroy pname:oldSwapchain to free all memory
 associated with pname:oldSwapchain.
-
++
 [NOTE]
 ====
 Multiple retired swapchains can: be associated with the same
diff --git a/chapters/capabilities.adoc b/chapters/capabilities.adoc
index c0b3765e..f46320fa 100644
--- a/chapters/capabilities.adoc
+++ b/chapters/capabilities.adoc
@@ -150,7 +150,7 @@ ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
      sampler {YCbCr} conversion>>
 endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
 ifdef::VK_EXT_image_drm_format_modifier[]
-  * If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
+  ** If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
     pname:maxArrayLayers must: not be 0.
 endif::VK_EXT_image_drm_format_modifier[]
   * pname:sampleCounts is a bitmask of elink:VkSampleCountFlagBits
@@ -1442,7 +1442,9 @@ following table:
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT | No restriction | No restriction
+ifdef::VK_FUCHSIA_external_semaphore[]
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA | No restriction | No restriction
+endif::VK_FUCHSIA_external_semaphore[]
 ifdef::VK_NV_external_sci_sync[]
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV | No restriction | No restriction
 endif::VK_NV_external_sci_sync[]
diff --git a/chapters/devsandqueues.adoc b/chapters/devsandqueues.adoc
index 42cf793e..e106ff05 100644
--- a/chapters/devsandqueues.adoc
+++ b/chapters/devsandqueues.adoc
@@ -306,12 +306,10 @@ include::{generated}/api/structs/VkPhysicalDeviceVulkan11Properties.adoc[]
 
 :anchor-prefix:
 include::{chapters}/devsandqueues.adoc[tag=VK_KHR_external_memory_capabilities-properties]
-
 // These members have different names in VkPhysicalDeviceSubgroupProperties
 :supportedStages: subgroupSupportedStages
 :supportedOperations: subgroupSupportedOperations
 :quadOperationsInAllStages: subgroupQuadOperationsInAllStages
-
 include::{chapters}/limits.adoc[tag=VK_KHR_subgroup-properties]
 include::{chapters}/limits.adoc[tag=VK_KHR_maintenance2-properties]
 include::{chapters}/limits.adoc[tag=VK_KHR_multiview-properties]
diff --git a/chapters/features.adoc b/chapters/features.adoc
index 652eee6e..cc9d44fa 100644
--- a/chapters/features.adoc
+++ b/chapters/features.adoc
@@ -5356,14 +5356,15 @@ This structure describes the following feature:
     that the implementation must: support using the elink:VkDescriptorType
     of ename:VK_DESCRIPTOR_TYPE_MUTABLE_EXT with at least the following
     descriptor types, where any combination of the types must: be supported:
++
   ** ename:VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER
-
-  * Additionally, pname:mutableDescriptorType indicates that:
++
+Additionally, pname:mutableDescriptorType indicates that:
 ifdef::VK_VERSION_1_2,VK_EXT_descriptor_indexing[]
   ** Non-uniform descriptor indexing must: be supported if all descriptor
      types in a slink:VkMutableDescriptorTypeListEXT for
diff --git a/chapters/limits.adoc b/chapters/limits.adoc
index e6d67d67..24c02741 100644
--- a/chapters/limits.adoc
+++ b/chapters/limits.adoc
@@ -1282,17 +1282,9 @@ include::{generated}/api/structs/VkPhysicalDeviceSubgroupProperties.adoc[]
   * pname:sType is a elink:VkStructureType value identifying this structure.
   * pname:pNext is `NULL` or a pointer to a structure extending this
     structure.
-
-// This language is similar to VkPhysicalDeviceVulkan11Properties but not quite identical enough to transclude
-
-// Must have preceding whitespace
-ifdef::VK_VERSION_1_2[:anchor-prefix: extension-]
-ifndef::VK_VERSION_1_2[:anchor-prefix:]
-// These members have different names in VkPhysicalDeviceVulkan11Properties
 :supportedStages: supportedStages
 :supportedOperations: supportedOperations
 :quadOperationsInAllStages: quadOperationsInAllStages
-
 // tag::VK_KHR_subgroup-properties[]
   * [[{anchor-prefix}limits-subgroupSize]] pname:subgroupSize is the default
     number of invocations in each subgroup.
diff --git a/chapters/memory.adoc b/chapters/memory.adoc
index a9ff8291..978137c3 100644
--- a/chapters/memory.adoc
+++ b/chapters/memory.adoc
@@ -273,6 +273,8 @@ include::{generated}/api/funcpointers/PFN_vkInternalFreeNotification.adoc[]
   * pname:allocationScope is a elink:VkSystemAllocationScope value
     specifying the allocation scope of the lifetime of the allocation, as
     described <<memory-host-allocation-scope,here>>.
+
+This is a purely informational callback.
 --
 
 [open,refpage='VkSystemAllocationScope',desc='Allocation scope',type='enums',xrefs='VkAllocationCallbacks']
diff --git a/config/attribs.adoc b/config/attribs.adoc
index a4b3591f..bccaf067 100644
--- a/config/attribs.adoc
+++ b/config/attribs.adoc
@@ -114,8 +114,9 @@ endif::VKSC_VERSION_1_0[]
 // The Antora resource ID must change if the component or module layout of
 // the feature descriptions changes.
 :specRepositoryURL: https://github.com/KhronosGroup/Vulkan-Docs/tree/main/
-ifdef::site-gen-antora[:proposalRefPath: xref:features:features:]
-ifndef::site-gen-antora[:proposalRefPath: link:{specRepositoryURL}]
+// ifdef::site-gen-antora[:proposalRefPath: xref:features:features:]
+// ifndef::site-gen-antora[:proposalRefPath: link:{specRepositoryURL}]
+:proposalRefPath: link:{specRepositoryURL}
 
 // URL prefix for the GLSL extensions registry
 :GLSLregistry: https://github.com/KhronosGroup/GLSL/blob/main/extensions
diff --git a/config/spec-macros.rb b/config/spec-macros.rb
index 28ffa806..777e8d39 100644
--- a/config/spec-macros.rb
+++ b/config/spec-macros.rb
@@ -3,7 +3,7 @@
 # SPDX-License-Identifier: Apache-2.0
 
 #require 'asciidoctor/extensions' unless RUBY_ENGINE == 'opal'
-RUBY_ENGINE == 'opal' ? (require 'spec-macros/extension') : (require_relative 'spec-macros/extension')
+RUBY_ENGINE == 'opal' ? (require 'spec-macros/extension') : (require_relative 'config/spec-macros/extension')
 
 # All the inline macros we need
 Asciidoctor::Extensions.register do
diff --git a/config/spec-macros/extension.rb b/config/spec-macros/extension.rb
index ef3e495d..0e654b53 100644
--- a/config/spec-macros/extension.rb
+++ b/config/spec-macros/extension.rb
@@ -7,7 +7,7 @@ require 'asciidoctor/extensions' unless RUBY_ENGINE == 'opal'
 include ::Asciidoctor
 
 # This is the generated map of API interfaces in this spec build
-require 'apimap.rb'
+require_relative '../../gen/apimap.rb'
 $apiNames = APInames.new
 
 class SpecInlineMacroBase < Extensions::InlineMacroProcessor
diff --git a/makeSpec b/makeSpec
index 10ca525a..df1b2976 100755
--- a/makeSpec
+++ b/makeSpec
@@ -116,6 +116,21 @@ if __name__ == '__main__':
         title = 'with all registered extensions'
         exts = set(deps.allExtensions())
 
+    #exts.remove('VK_ANDROID_external_memory_android_hardware_buffer')
+    #exts.remove('VK_EXT_directfb_surface')
+    exts.remove('VK_FUCHSIA_buffer_collection')
+    exts.remove('VK_FUCHSIA_imagepipe_surface')
+    exts.remove('VK_FUCHSIA_external_memory')
+    exts.remove('VK_FUCHSIA_external_semaphore')
+    exts.remove('VK_GGP_frame_token')
+    exts.remove('VK_GGP_stream_descriptor_surface')
+    #exts.remove('VK_KHR_android_surface')
+    #exts.remove('VK_KHR_xcb_surface')
+    exts.remove('VK_MVK_ios_surface')
+    exts.remove('VK_NN_vi_surface')
+    exts.remove('VK_QNX_screen_surface')
+    exts.remove('VK_QNX_external_memory_screen_buffer')
+
     # List of explicitly requested extension and all its supported dependencies
     extraexts = set()
     for name in results.extension:
diff --git a/scripts/extensionmetadocgenerator.py b/scripts/extensionmetadocgenerator.py
index e89e4ae1..b315c990 100644
--- a/scripts/extensionmetadocgenerator.py
+++ b/scripts/extensionmetadocgenerator.py
@@ -279,18 +279,17 @@ class Extension:
         if self.conventions.write_extension_revision:
             self.writeTag('Revision', self.revision, isRefpage, fp)
 
-        if self.conventions.xml_api_name in self.ratified.split(','):
-            ratstatus = 'Ratified'
-        else:
-            ratstatus = 'Not ratified'
-        self.writeTag('Ratification Status', ratstatus, isRefpage, fp)
-
-        # Only API extension dependencies are coded in XML, others are explicit
-        self.writeTag('Extension and Version Dependencies', None, isRefpage, fp)
+        #if self.conventions.xml_api_name in self.ratified.split(','):
+            #ratstatus = 'Ratified'
+        #else:
+            #ratstatus = 'Not ratified'
+        #self.writeTag('Ratification Status', ratstatus, isRefpage, fp)
 
         # Transform the boolean 'depends' expression into equivalent
         # human-readable asciidoc markup.
         if self.depends is not None:
+            # Only API extension dependencies are coded in XML, others are explicit
+            self.writeTag('Extension and Version Dependencies', None, isRefpage, fp)
             if isRefpage:
                 separator = ''
             else:
@@ -301,15 +300,17 @@ class Extension:
         else:
             # Do not specify the base API redundantly, but put something
             # here to avoid formatting trouble.
-            self.writeTag(None, 'None', isRefpage, fp)
+            # LWJGL: revert to old behavior
+            #self.writeTag(None, 'None', isRefpage, fp)
+            True
 
         if self.provisional == 'true' and self.conventions.provisional_extension_warning:
-            write('  * *This is a _provisional_ extension and must: be used with caution.', file=fp)
+            write('  * This is a _provisional_ extension and must: be used with caution.', file=fp)
             write('    See the ' +
                   self.specLink(xrefName = 'boilerplate-provisional-header',
                                 xrefText = 'description',
                                 isRefpage = isRefpage) +
-                  ' of provisional header files for enablement and stability details.*', file=fp)
+                  ' of provisional header files for enablement and stability details.', file=fp)
         write('', file=fp)
 
         # Determine version and extension interactions from 'depends'
diff --git a/scripts/parse_dependency.py b/scripts/parse_dependency.py
index f9749d77..6f757b0d 100755
--- a/scripts/parse_dependency.py
+++ b/scripts/parse_dependency.py
@@ -287,10 +287,10 @@ def markupTraverse(expr, level = 0, root = True):
        - level - indentation level to render expression at
        - root - True only on initial call"""
 
-    if level > 0:
-        prefix = '{nbsp}{nbsp}' * level * 2 + ' '
-    else:
-        prefix = ''
+    #if level > 0:
+        #prefix = '{nbsp}{nbsp}' * level * 2 + ' '
+    #else:
+    prefix = ''
     str = ''
 
     for elem in expr:
diff --git a/scripts/reflib.py b/scripts/reflib.py
index c8771efe..07097b34 100644
--- a/scripts/reflib.py
+++ b/scripts/reflib.py
@@ -217,6 +217,11 @@ def nextPara(file, line):
     maxLine = len(file) - 1
     # Skip over current paragraph
     while (line != maxLine and not isempty(file[line])):
+        # LWJGL: Skip note blocks (may contain empty lines)
+        if (file[line] == '====\n'):
+            line = line + 1
+            while (line != maxLine and file[line] != '====\n'):
+                line = line + 1
         line = line + 1
     # Skip over white space
     while (line != maxLine and isempty(file[line])):
@@ -264,6 +269,10 @@ def clampToBlock(line, minline, maxline):
 
     return line
 
+# LWJGL: body/Description block detection
+regexListItem = re.compile('^(?:[/]|\s+[^/])')
+regexAnchorPrefix = re.compile('^:anchor-prefix:$')
+
 def fixupRefs(pageMap, specFile, file):
     """Fill in missing fields in pageInfo structures, to the extent they can be
     inferred.
@@ -329,7 +338,11 @@ def fixupRefs(pageMap, specFile, file):
                     # text between the include block and the actual
                     # parameter descriptions.
                     # If so, advance the body one more paragraph.
-                    if 'This structure describes the following feature' in file[pi.param]:
+                    #if 'This structure describes the following feature' in file[pi.param]:
+                    # LWJGL: body/Description block detection
+                    while regexListItem.match(file[pi.body]):
+                        pi.body = nextPara(file, pi.body)
+                    if regexAnchorPrefix.match(file[pi.body]):
                         pi.body = nextPara(file, pi.body)
             else:
                 if pi.body is None:
diff --git a/scripts/validitygenerator.py b/scripts/validitygenerator.py
index cdf2a393..472cb5fc 100755
--- a/scripts/validitygenerator.py
+++ b/scripts/validitygenerator.py
@@ -299,14 +299,15 @@ class ValidityOutputGenerator(OutputGenerator):
                     write('On failure, this command returns::', file=fp)
                     write('endif::doctype-manpage[]', file=fp)
                     write(errorcodes, file=fp)
-                else: #no errorcodes
-                    write('ifndef::doctype-manpage[]', file=fp)
-                    write('<<fundamentals-errorcodes,Failure>>::', file=fp)
-                    write('None', file=fp)
-                    write('endif::doctype-manpage[]', file=fp)
-                    write('ifdef::doctype-manpage[]', file=fp)
-                    write('This command does not return any failure codes::', file=fp)
-                    write('endif::doctype-manpage[]', file=fp)
+                # LWJGL: useless and breaks our parser, remove
+                #else: #no errorcodes
+                    #write('ifndef::doctype-manpage[]', file=fp)
+                    #write('<<fundamentals-errorcodes,Failure>>::', file=fp)
+                    #write('None', file=fp)
+                    #write('endif::doctype-manpage[]', file=fp)
+                    #write('ifdef::doctype-manpage[]', file=fp)
+                    #write('This command does not return any failure codes::', file=fp)
+                    #write('endif::doctype-manpage[]', file=fp)
                 write('****', file=fp)
                 write('', file=fp)
 
diff --git a/scripts/vkconventions.py b/scripts/vkconventions.py
index 1d624e7b..947eb69a 100755
--- a/scripts/vkconventions.py
+++ b/scripts/vkconventions.py
@@ -60,7 +60,7 @@ class VulkanConventions(ConventionsBase):
             else:
                 return f'<<versions-sc-{version}, Vulkan SC Version {version}>>'
         else:
-            return f'<<versions-{version}, Vulkan Version {version}>>'
+            return f'<<versions-{version}, Version {version}>>'
 
     def formatExtension(self, name):
         """Mark up an extension name as a link in the spec."""
diff --git a/xml/vk.xml b/xml/vk.xml
index 45d0e2e2..5b65c8a2 100644
--- a/xml/vk.xml
+++ b/xml/vk.xml
@@ -234,7 +234,7 @@ branch of the member gitlab server.
 
         <type category="basetype">struct <name>ANativeWindow</name>;</type>
         <type category="basetype">struct <name>AHardwareBuffer</name>;</type>
-        <type category="basetype">#ifdef __OBJC__
+        <!--<type category="basetype">#ifdef __OBJC__
 @class CAMetalLayer;
 #else
 typedef void <name>CAMetalLayer</name>;
@@ -269,7 +269,14 @@ typedef __unsafe_unretained id&lt;MTLSharedEvent&gt; MTLSharedEvent_id;
 #else
 typedef void* <name>MTLSharedEvent_id</name>;
 #endif</type>
-        <type category="basetype">typedef struct __IOSurface* <name>IOSurfaceRef</name>;</type>
+        <type category="basetype">typedef struct __IOSurface* <name>IOSurfaceRef</name>;</type>-->
+        <type requires="QuartzCore.h" name="CAMetalLayer"/>
+        <type requires="Metal.h" name="MTLDevice_id"/>
+        <type requires="Metal.h" name="MTLCommandQueue_id"/>
+        <type requires="Metal.h" name="MTLBuffer_id"/>
+        <type requires="Metal.h" name="MTLTexture_id"/>
+        <type requires="Metal.h" name="MTLSharedEvent_id"/>
+        <type requires="IOSurface.h" name="IOSurfaceRef"/>
 
         <type category="basetype">typedef <type>uint32_t</type> <name>VkSampleMask</name>;</type>
         <type category="basetype">typedef <type>uint32_t</type> <name>VkBool32</name>;</type>
@@ -292,7 +299,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <type requires="vk_platform" name="int32_t"/>
         <type requires="vk_platform" name="int64_t"/>
         <type requires="vk_platform" name="size_t"/>
-        <type name="int"/>
+        <type requires="vk_platform" name="int"/>
 
             <comment>Bitmask types</comment>
         <type requires="VkFramebufferCreateFlagBits"      category="bitmask">typedef <type>VkFlags</type> <name>VkFramebufferCreateFlags</name>;</type>
@@ -4592,7 +4599,6 @@ typedef void* <name>MTLSharedEvent_id</name>;
             <member optional="true"><type>void</type>*                            <name>pNext</name></member>
             <member><type>VkBool32</type>                         <name>meshAndTaskShaderDerivatives</name></member>
         </type>
-        <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"   alias="VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR"/>
         <type category="struct" name="VkPhysicalDeviceShaderImageFootprintFeaturesNV" structextends="VkPhysicalDeviceFeatures2,VkDeviceCreateInfo">
             <member values="VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true"><type>void</type>*                              <name>pNext</name></member>
@@ -4829,7 +4835,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <type category="struct" name="VkAccelerationStructureInfoNV">
             <member values="VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true">const <type>void</type>*                            <name>pNext</name></member>
-            <member><type>VkAccelerationStructureTypeNV</type>         <name>type</name></member>
+            <member><type>VkAccelerationStructureTypeKHR</type>         <name>type</name></member>
             <member optional="true"><type>VkBuildAccelerationStructureFlagsNV</type> <name>flags</name></member>
             <member optional="true"><type>uint32_t</type>               <name>instanceCount</name></member>
             <member optional="true"><type>uint32_t</type>               <name>geometryCount</name></member>
@@ -8119,6 +8125,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
             <member optional="true"><type>void</type>*  <name>pNext</name></member>
             <member><type>VkBool32</type>               <name>fragmentShaderBarycentric</name></member>
         </type>
+        <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"   alias="VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR"/>
         <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR" returnedonly="true" structextends="VkPhysicalDeviceProperties2">
             <member values="VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true"><type>void</type>*  <name>pNext</name></member>
@@ -11362,7 +11369,6 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <enum bitpos="14"   name="VK_ACCESS_2_HOST_WRITE_BIT"/>
         <enum bitpos="15"   name="VK_ACCESS_2_MEMORY_READ_BIT"/>
         <enum bitpos="16"   name="VK_ACCESS_2_MEMORY_WRITE_BIT"/>
-            <comment>bitpos 17-31 are specified by extensions to the original VkAccessFlagBits enum</comment>
         <enum bitpos="32"   name="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"/>
         <enum bitpos="33"   name="VK_ACCESS_2_SHADER_STORAGE_READ_BIT"/>
         <enum bitpos="34"   name="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"/>
@@ -11382,12 +11388,10 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <enum bitpos="10"   name="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
         <enum bitpos="11"   name="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
         <enum bitpos="12"   name="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TRANSFER_BIT" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
         <enum bitpos="13"   name="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"/>
         <enum bitpos="14"   name="VK_PIPELINE_STAGE_2_HOST_BIT"/>
         <enum bitpos="15"   name="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"/>
         <enum bitpos="16"   name="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
-            <comment>bitpos 17-31 are specified by extensions to the original VkPipelineStageFlagBits enum</comment>
         <enum bitpos="32"   name="VK_PIPELINE_STAGE_2_COPY_BIT"/>
         <enum bitpos="33"   name="VK_PIPELINE_STAGE_2_RESOLVE_BIT"/>
         <enum bitpos="34"   name="VK_PIPELINE_STAGE_2_BLIT_BIT"/>
@@ -11609,7 +11613,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <enum bitpos="10"   name="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"/>
         <enum bitpos="11"   name="VK_FORMAT_FEATURE_2_BLIT_DST_BIT"/>
         <enum bitpos="12"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"/>
-            <comment>bitpos 13 is an extension interaction with VK_EXT_filter_cubic"</comment>
+        <enum bitpos="13"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"/>
         <enum bitpos="14"   name="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"/>
         <enum bitpos="15"   name="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"/>
         <enum bitpos="16"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
@@ -17594,7 +17598,6 @@ typedef void* <name>MTLSharedEvent_id</name>;
             <type name="VkFormatFeatureFlags2"/>
             <type name="VkFormatFeatureFlagBits2"/>
             <type name="VkFormatProperties3"/>
-            <enum bitpos="13" extends="VkFormatFeatureFlagBits2"                name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT" comment="This is an interaction with EXT_filter_cubic, though not tagged that way"/>
         </require>
         <require comment="Promoted from VK_EXT_extended_dynamic_state2 (Feature struct and optional state are not promoted) (extension 378)">
             <enum offset="1" extends="VkDynamicState"  extnumber="378"          name="VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE"/>
@@ -18768,6 +18771,9 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkRenderingFlagsKHR"/>
                 <type name="VkRenderingFlagBitsKHR"/>
                 <feature name="dynamicRendering" struct="VkPhysicalDeviceDynamicRenderingFeaturesKHR"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR" alias="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_SUSPENDING_BIT_KHR" alias="VK_RENDERING_SUSPENDING_BIT"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_RESUMING_BIT_KHR" alias="VK_RENDERING_RESUMING_BIT"/>
             </require>
         </extension>
         <extension name="VK_AMD_extension_46" number="46" author="AMD" contact="Daniel Rakos @drakos-amd" supported="disabled">
@@ -21029,6 +21035,9 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkPipelineCreationFeedbackFlagsEXT"/>
                 <type name="VkPipelineCreationFeedbackCreateInfoEXT"/>
                 <type name="VkPipelineCreationFeedbackEXT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"/>
             </require>
         </extension>
         <extension name="VK_GOOGLE_extension_194" number="194" author="GOOGLE" contact="Jean-Francois Roy @jfroy" supported="disabled">
@@ -21345,7 +21354,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkMetalSurfaceCreateFlagsEXT"/>
                 <type name="VkMetalSurfaceCreateInfoEXT"/>
                 <command name="vkCreateMetalSurfaceEXT"/>
-                <type name="CAMetalLayer"/>
+                <!--<type name="CAMetalLayer"/>-->
             </require>
         </extension>
         <extension name="VK_EXT_fragment_density_map" number="219" type="device" depends="VK_KHR_get_physical_device_properties2,VK_VERSION_1_1" author="EXT" contact="Matthew Netsch @mnetsch" supported="vulkan" ratified="vulkan">
@@ -21659,12 +21668,17 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type                                                       name="VkToolPurposeFlagsEXT"/>
                 <type                                                       name="VkPhysicalDeviceToolPropertiesEXT"/>
                 <command                                                    name="vkGetPhysicalDeviceToolPropertiesEXT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_VALIDATION_BIT_EXT"          alias="VK_TOOL_PURPOSE_VALIDATION_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_PROFILING_BIT_EXT"           alias="VK_TOOL_PURPOSE_PROFILING_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_TRACING_BIT_EXT"             alias="VK_TOOL_PURPOSE_TRACING_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT" alias="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT"  alias="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"/>
             </require>
             <require depends="VK_EXT_debug_report">
-                <enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
+                <!--<enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>-->
             </require>
             <require depends="VK_EXT_debug_marker">
-                <enum bitpos="6" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>
+                <!--<enum bitpos="6" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>-->
             </require>
             <require depends="VK_EXT_debug_utils">
                 <enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
@@ -22659,12 +22673,12 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkImportMetalIOSurfaceInfoEXT"/>
                 <type name="VkExportMetalSharedEventInfoEXT"/>
                 <type name="VkImportMetalSharedEventInfoEXT"/>
-                <type name="MTLDevice_id"/>
+                <!--<type name="MTLDevice_id"/>
                 <type name="MTLCommandQueue_id"/>
                 <type name="MTLBuffer_id"/>
                 <type name="MTLTexture_id"/>
                 <type name="MTLSharedEvent_id"/>
-                <type name="IOSurfaceRef"/>
+                <type name="IOSurfaceRef"/>-->
                 <command name="vkExportMetalObjectsEXT"/>
             </require>
         </extension>
@@ -22767,6 +22781,54 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <command name="vkCmdWriteTimestamp2KHR"/>
                 <command name="vkQueueSubmit2KHR"/>
                 <feature name="synchronization2" struct="VkPhysicalDeviceSynchronization2FeaturesKHR"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_NONE_KHR" alias="VK_PIPELINE_STAGE_2_NONE"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
+				<enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_HOST_BIT_KHR" alias="VK_PIPELINE_STAGE_2_HOST_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COPY_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COPY_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_RESOLVE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_BLIT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BLIT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR" alias="VK_PIPELINE_STAGE_2_CLEAR_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_NONE_KHR" alias="VK_ACCESS_2_NONE"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR" alias="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INDEX_READ_BIT_KHR" alias="VK_ACCESS_2_INDEX_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR" alias="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_UNIFORM_READ_BIT_KHR" alias="VK_ACCESS_2_UNIFORM_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_TRANSFER_READ_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_HOST_READ_BIT_KHR" alias="VK_ACCESS_2_HOST_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_HOST_WRITE_BIT_KHR" alias="VK_ACCESS_2_HOST_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_MEMORY_READ_BIT_KHR" alias="VK_ACCESS_2_MEMORY_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_MEMORY_WRITE_BIT_KHR" alias="VK_ACCESS_2_MEMORY_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"/>
+                <enum extends="VkSubmitFlagBits"                            name="VK_SUBMIT_PROTECTED_BIT_KHR" alias="VK_SUBMIT_PROTECTED_BIT"/>
             </require>
             <require depends="VK_EXT_transform_feedback">
                 <enum bitpos="24" extends="VkPipelineStageFlagBits2"        name="VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT"/>
@@ -23413,6 +23475,33 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type                                                       name="VkFormatFeatureFlags2KHR"/>
                 <type                                                       name="VkFormatFeatureFlagBits2KHR"/>
                 <type                                                       name="VkFormatProperties3KHR"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_DST_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DISJOINT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"/>
             </require>
             <require depends="VK_VERSION_1_2,VK_EXT_sampler_filter_minmax">
                 <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
@@ -24742,8 +24831,8 @@ typedef void* <name>MTLSharedEvent_id</name>;
             </require>
             <require depends="(VK_KHR_dynamic_rendering,VK_VERSION_1_3)+(VK_KHR_maintenance5,VK_VERSION_1_4)">
                 <enum bitpos="3" extends="VkRenderingFlagBits"           name="VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT"/>
-                <enum bitpos="34" extends="VkPipelineCreateFlagBits2"    name="VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT"/>
             </require>
+            <!-- Removed extra VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT, should handle in vulkangen somehow instead -->
         </extension>
         <extension name="VK_EXT_pipeline_protected_access" number="467" type="device" depends="VK_KHR_get_physical_device_properties2,VK_VERSION_1_1" author="EXT" contact="Shahbaz Youssefi @syoussefi" supported="vulkan" promotedto="VK_VERSION_1_4">
             <require>
-- 
2.34.1

