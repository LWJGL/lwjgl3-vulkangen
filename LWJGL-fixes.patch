From c50edac28ab193aea3ecc6744dd8d5433acc0dbb Mon Sep 17 00:00:00 2001
From: Ioannis Tsakpinis <iotsakp@gmail.com>
Date: Sat, 17 Sep 2022 10:17:38 +0300
Subject: [PATCH] LWJGL fixes

---
 .gitignore                                    |   9 +-
 Makefile                                      |   2 +-
 appendices/VK_EXT_debug_report.adoc           |  22 --
 appendices/VK_INTEL_performance_query.adoc    |   2 +-
 ...VK_KHR_pipeline_executable_properties.adoc |   1 -
 .../VK_NV_device_diagnostics_config.adoc      |   2 +-
 .../PresentTimeInfo.adoc                      |   2 +
 .../VK_INTEL_performance_query/queries.adoc   |  10 +-
 chapters/VK_KHR_display/display.adoc          |   4 +-
 .../queriesperformance.adoc                   |   2 +
 chapters/VK_KHR_swapchain/wsi.adoc            |   6 +-
 .../platformCreateSurface_macos.adoc          |  10 -
 .../indirectcommands.adoc                     |   2 +-
 chapters/capabilities.adoc                    |   4 +-
 chapters/features.adoc                        |   5 +-
 chapters/limits.adoc                          |   2 +-
 chapters/memory.adoc                          |   2 +
 chapters/video_decode_h265_extensions.adoc    |   8 +-
 makeSpec                                      |  14 ++
 scripts/extensionmetadocgenerator.py          |   4 +-
 scripts/reflib.py                             |  14 ++
 xml/vk.xml                                    | 208 +++++++++---------
 22 files changed, 174 insertions(+), 161 deletions(-)

diff --git a/.gitignore b/.gitignore
index 1563cb44..6359a2a3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -47,8 +47,13 @@ __pycache__
 # Spec build generated, temporary, and output files

 # Files generated from vk.xml
-/gen/
-/gencore/
+#/gen/
+#/gencore/
+/gen/api.py
+/gen/out/
+/gen/refpage/refpage.log
+/gen/spirvcap/
+timeMarker

 # Output files and directories
 gen/out/**
diff --git a/Makefile b/Makefile
index 4a9cc082..149cf5fa 100644
--- a/Makefile
+++ b/Makefile
@@ -501,7 +501,7 @@ manhtmlpages: $(REFPATH)/apispec.adoc $(GENDEPENDS)
 	$(QUIET) echo "manhtmlpages: building HTML refpages with these options:"
 	$(QUIET) echo $(ASCIIDOC) -b html5 $(ADOCOPTS) $(ADOCHTMLOPTS) \
 	    $(ADOCREFOPTS) -d manpage -o REFPAGE.html REFPAGE.adoc
-	$(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages
+	#$(MAKE) $(SUBMAKEOPTIONS) -e buildmanpages

 # Build the individual refpages, then the symbolic links from aliases
 MANHTMLDIR  = $(OUTDIR)/man/html
diff --git a/appendices/VK_EXT_debug_report.adoc b/appendices/VK_EXT_debug_report.adoc
index 554fe657..488aa61b 100644
--- a/appendices/VK_EXT_debug_report.adoc
+++ b/appendices/VK_EXT_debug_report.adoc
@@ -91,28 +91,6 @@ happens and the third will log warnings to stdout.
     vkDestroyDebugReportCallbackEXT(instance, cb3);
 ------------------------------------------------------------------------------

-[NOTE]
-.Note
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT was used.
-Starting in version 2 of the extension branch,
-ename:VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-
-[NOTE]
-.Note
-====
-In the initial release of the `VK_EXT_debug_report` extension, the token
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT was used.
-Starting in version 8 of the extension branch,
-ename:VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT is used
-instead for consistency with Vulkan naming rules.
-The older enum is still available for backwards compatibility.
-====
-

 === Issues

diff --git a/appendices/VK_INTEL_performance_query.adoc b/appendices/VK_INTEL_performance_query.adoc
index 0edab317..655e17a0 100644
--- a/appendices/VK_INTEL_performance_query.adoc
+++ b/appendices/VK_INTEL_performance_query.adoc
@@ -22,7 +22,7 @@ interpreted by a external application or library.
 Such a library is available at : https://github.com/intel/metrics-discovery

 Performance analysis tools such as
-link:++https://software.intel.com/content/www/us/en/develop/tools/graphics-performance-analyzers.html++[Graphics
+link:https://software.intel.com/content/www/us/en/develop/tools/graphics-performance-analyzers.html[Graphics
 Performance Analyzers] make use of this extension and the metrics-discovery
 library to present the data in a human readable way.

diff --git a/appendices/VK_KHR_pipeline_executable_properties.adoc b/appendices/VK_KHR_pipeline_executable_properties.adoc
index c198fa65..e3cbd9a5 100644
--- a/appendices/VK_KHR_pipeline_executable_properties.adoc
+++ b/appendices/VK_KHR_pipeline_executable_properties.adoc
@@ -10,7 +10,6 @@ include::{generated}/meta/{refprefix}VK_KHR_pipeline_executable_properties.adoc[
     2019-05-28
 *IP Status*::
     No known IP claims.
-*Interactions and External Dependencies*::
 *Contributors*::
   - Jason Ekstrand, Intel
   - Ian Romanick, Intel
diff --git a/appendices/VK_NV_device_diagnostics_config.adoc b/appendices/VK_NV_device_diagnostics_config.adoc
index 28d0280a..8faabcbf 100644
--- a/appendices/VK_NV_device_diagnostics_config.adoc
+++ b/appendices/VK_NV_device_diagnostics_config.adoc
@@ -14,7 +14,7 @@ include::{generated}/meta/{refprefix}VK_NV_device_diagnostics_config.adoc[]

 === Description

-Applications using Nvidia Nsight^(TM)^ Aftermath SDK for Vulkan to integrate
+Applications using Nvidia Nsight(TM) Aftermath SDK for Vulkan to integrate
 device crash dumps into their error reporting mechanisms, may: use this
 extension to configure options related to device crash dump creation.

diff --git a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
index 32e94907..559cb3c9 100644
--- a/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
+++ b/chapters/VK_GOOGLE_display_timing/PresentTimeInfo.adoc
@@ -66,4 +66,6 @@ include::{generated}/api/structs/VkPresentTimeGOOGLE.adoc[]
     image at any time.
     This is useful when the application desires to provide pname:presentID,
     but does not need a specific pname:desiredPresentTime.
+
+include::{generated}/validity/structs/VkPresentTimeGOOGLE.txt[]
 --
diff --git a/chapters/VK_INTEL_performance_query/queries.adoc b/chapters/VK_INTEL_performance_query/queries.adoc
index ad90cf51..b92284f2 100644
--- a/chapters/VK_INTEL_performance_query/queries.adoc
+++ b/chapters/VK_INTEL_performance_query/queries.adoc
@@ -123,11 +123,11 @@ The sname:VkPerformanceValueDataINTEL union is defined as:

 include::{generated}/api/structs/VkPerformanceValueDataINTEL.adoc[]

-  * pname:data.value32 represents 32-bit integer data.
-  * pname:data.value64 represents 64-bit integer data.
-  * pname:data.valueFloat represents floating-point data.
-  * pname:data.valueBool represents basetype:Bool32 data.
-  * pname:data.valueString represents a pointer to a null-terminated UTF-8
+  * pname:value32 represents 32-bit integer data.
+  * pname:value64 represents 64-bit integer data.
+  * pname:valueFloat represents floating-point data.
+  * pname:valueBool represents basetype:Bool32 data.
+  * pname:valueString represents a pointer to a null-terminated UTF-8
     string.

 The correct member of the union is determined by the associated
diff --git a/chapters/VK_KHR_display/display.adoc b/chapters/VK_KHR_display/display.adoc
index dbf3e11b..5a36760c 100644
--- a/chapters/VK_KHR_display/display.adoc
+++ b/chapters/VK_KHR_display/display.adoc
@@ -71,7 +71,7 @@ include::{generated}/api/structs/VkDisplayPropertiesKHR.adoc[]
     visible portion of the display, in millimeters.
   * pname:physicalResolution describes the physical, native, or preferred
     resolution of the display.
-
++
 [NOTE]
 .Note
 ====
@@ -90,7 +90,7 @@ should: return the maximum resolution supported.
     self-refresh/internal buffering.
     If this is true, the application can: submit persistent present
     operations on swapchains created against this display.
-
++
 [NOTE]
 .Note
 ====
diff --git a/chapters/VK_KHR_performance_query/queriesperformance.adoc b/chapters/VK_KHR_performance_query/queriesperformance.adoc
index 2b30511e..43c0283d 100644
--- a/chapters/VK_KHR_performance_query/queriesperformance.adoc
+++ b/chapters/VK_KHR_performance_query/queriesperformance.adoc
@@ -71,6 +71,8 @@ supplied in pname:pCounterIndices when creating the performance query.
 The slink:VkPerformanceCounterKHR::pname:unit enumeration specifies how to
 parse the counter data.

+include::{generated}/api/structs/VkPerformanceCounterResultKHR.adoc[]
+
 include::{generated}/validity/structs/VkPerformanceCounterResultKHR.adoc[]
 --

diff --git a/chapters/VK_KHR_swapchain/wsi.adoc b/chapters/VK_KHR_swapchain/wsi.adoc
index f4e7f4e0..3924105a 100644
--- a/chapters/VK_KHR_swapchain/wsi.adoc
+++ b/chapters/VK_KHR_swapchain/wsi.adoc
@@ -309,20 +309,20 @@ effects that require them to run for all pixels in the presentable image.
     Providing a valid pname:oldSwapchain may: aid in the resource reuse, and
     also allows the application to still present any images that are already
     acquired from it.
-
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, pname:oldSwapchain is retired -- even if creation
 of the new swapchain fails.
 The new swapchain is created in the non-retired state whether or not
 pname:oldSwapchain is dlink:VK_NULL_HANDLE.
-
++
 Upon calling fname:vkCreateSwapchainKHR with an pname:oldSwapchain that is
 not dlink:VK_NULL_HANDLE, any images from pname:oldSwapchain that are not
 acquired by the application may: be freed by the implementation, which may:
 occur even if creation of the new swapchain fails.
 The application can: destroy pname:oldSwapchain to free all memory
 associated with pname:oldSwapchain.
-
++
 [NOTE]
 .Note
 ====
diff --git a/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.adoc b/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.adoc
index bd5d9999..97b32987 100644
--- a/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.adoc
+++ b/chapters/VK_MVK_macos_surface/platformCreateSurface_macos.adoc
@@ -12,16 +12,6 @@ basetype:CAMetalLayer, call:

 include::{generated}/api/protos/vkCreateMacOSSurfaceMVK.adoc[]

-ifdef::VK_EXT_metal_surface[]
-[NOTE]
-.Note
-====
-The `vkCreateMacOSSurfaceMVK` function is considered deprecated and has been
-superseded by flink:vkCreateMetalSurfaceEXT from the
-`apiext:VK_EXT_metal_surface` extension.
-====
-endif::VK_EXT_metal_surface[]
-
   * pname:instance is the instance with which to associate the surface.
   * pname:pCreateInfo is a pointer to a slink:VkMacOSSurfaceCreateInfoMVK
     structure containing parameters affecting the creation of the surface
diff --git a/chapters/VK_NV_device_generated_commands/indirectcommands.adoc b/chapters/VK_NV_device_generated_commands/indirectcommands.adoc
index 0dfd072d..b85d7e16 100644
--- a/chapters/VK_NV_device_generated_commands/indirectcommands.adoc
+++ b/chapters/VK_NV_device_generated_commands/indirectcommands.adoc
@@ -138,7 +138,7 @@ This enables direct compatibility with D3D12 command signature layouts.
     pname:streamCount must: be greater than `0` and less or equal to
     sname:VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV::pname:maxIndirectCommandsStreamCount
   * [[VUID-VkIndirectCommandsLayoutCreateInfoNV-pStreamStrides-02937]]
-    each element of pname:pStreamStrides must: be greater than `0`and less
+    each element of pname:pStreamStrides must: be greater than `0` and less
     than or equal to
     sname:VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV::pname:maxIndirectCommandsStreamStride.
     Furthermore the alignment of each token input must: be ensured
diff --git a/chapters/capabilities.adoc b/chapters/capabilities.adoc
index aec37046..a5dd2e69 100644
--- a/chapters/capabilities.adoc
+++ b/chapters/capabilities.adoc
@@ -135,7 +135,7 @@ ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
      sampler {YCbCr} conversion>>
 endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
 ifdef::VK_EXT_image_drm_format_modifier[]
-  * If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
+  ** If pname:tiling is ename:VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT, then
     pname:maxArrayLayers must: not be 0.
 endif::VK_EXT_image_drm_format_modifier[]
   * pname:sampleCounts is a bitmask of elink:VkSampleCountFlagBits
@@ -1289,7 +1289,9 @@ following table:
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT | Must match | Must match
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT | No restriction | No restriction
+ifdef::VK_FUCHSIA_external_semaphore[]
 | ename:VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA | No restriction | No restriction
+endif::VK_FUCHSIA_external_semaphore[]
 |====
 --

diff --git a/chapters/features.adoc b/chapters/features.adoc
index d9a1b827..9ebb957e 100644
--- a/chapters/features.adoc
+++ b/chapters/features.adoc
@@ -4429,14 +4429,15 @@ This structure describes the following feature:
     that the implementation must: support using the elink:VkDescriptorType
     of ename:VK_DESCRIPTOR_TYPE_MUTABLE_EXT with at least the following
     descriptor types, where any combination of the types must: be supported:
++
   ** ename:VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_IMAGE
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER
   ** ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER
-
-  * Additionally, pname:mutableDescriptorType indicates that:
++
+Additionally, pname:mutableDescriptorType indicates that:
 ifdef::VK_VERSION_1_2,VK_EXT_descriptor_indexing[]
   ** Non-uniform descriptor indexing must: be supported if all descriptor
      types in a slink:VkMutableDescriptorTypeListEXT for
diff --git a/chapters/limits.adoc b/chapters/limits.adoc
index e8234b45..aba5d047 100644
--- a/chapters/limits.adoc
+++ b/chapters/limits.adoc
@@ -1284,7 +1284,7 @@ ifndef::VK_VERSION_1_2[:anchor-prefix:]
 include::{chapters}/limits.adoc[tag=limits_desc]

 If pname:supportedOperations includes <<features-subgroup-quad,
-ename:VK_SUBGROUP_FEATURE_QUAD_BIT,>>
+ename:VK_SUBGROUP_FEATURE_QUAD_BIT>>,
 ifdef::VK_KHR_shader_subgroup_uniform_control_flow[]
 or <<features-shaderSubgroupUniformControlFlow,
 pname:shaderSubgroupUniformControlFlow>> is enabled,
diff --git a/chapters/memory.adoc b/chapters/memory.adoc
index a6a09ee1..a484673b 100644
--- a/chapters/memory.adoc
+++ b/chapters/memory.adoc
@@ -230,6 +230,8 @@ include::{generated}/api/funcpointers/PFN_vkInternalFreeNotification.adoc[]
   * pname:allocationScope is a elink:VkSystemAllocationScope value
     specifying the allocation scope of the lifetime of the allocation, as
     described <<memory-host-allocation-scope,here>>.
+
+This is a purely informational callback.
 --

 [open,refpage='VkSystemAllocationScope',desc='Allocation scope',type='enums',xrefs='VkAllocationCallbacks']
diff --git a/chapters/video_decode_h265_extensions.adoc b/chapters/video_decode_h265_extensions.adoc
index d5a2d206..8d3ad298 100644
--- a/chapters/video_decode_h265_extensions.adoc
+++ b/chapters/video_decode_h265_extensions.adoc
@@ -66,10 +66,6 @@ slink:VkVideoProfileInfoKHR field of slink:VkVideoSessionCreateInfoKHR.

 [open,refpage='VkVideoDecodeH265CapabilitiesEXT',desc='Structure specifies H.265 decode capabilities parameters when decoding a frame',type='structs']
 --
-The sname:VkVideoDecodeH265CapabilitiesEXT structure is defined as:
-
-include::{generated}/api/structs/VkVideoDecodeH265CapabilitiesEXT.adoc[]
-
 When using flink:vkGetPhysicalDeviceVideoCapabilitiesKHR to query the
 capabilities for the parameter pname:videoCodecOperation specified as
 ename:VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_EXT, a
@@ -77,6 +73,10 @@ slink:VkVideoDecodeH265CapabilitiesEXT structure can: be chained to
 slink:VkVideoCapabilitiesKHR to return this H.265 extension specific
 capabilities.

+The sname:VkVideoDecodeH265CapabilitiesEXT structure is defined as:
+
+include::{generated}/api/structs/VkVideoDecodeH265CapabilitiesEXT.adoc[]
+
   * pname:sType is the type of this structure.
   * pname:pNext is `NULL` or a pointer to a structure extending this
     structure.
diff --git a/makeSpec b/makeSpec
index bc3ef458..2e3ed260 100755
--- a/makeSpec
+++ b/makeSpec
@@ -98,6 +98,20 @@ if __name__ == '__main__':
         title = 'with all registered extensions'
         exts = set(deps.allExtensions())

+    exts.remove('VK_ANDROID_external_memory_android_hardware_buffer')
+    exts.remove('VK_EXT_directfb_surface')
+    exts.remove('VK_FUCHSIA_buffer_collection')
+    exts.remove('VK_FUCHSIA_imagepipe_surface')
+    exts.remove('VK_FUCHSIA_external_memory')
+    exts.remove('VK_FUCHSIA_external_semaphore')
+    exts.remove('VK_GGP_frame_token')
+    exts.remove('VK_GGP_stream_descriptor_surface')
+    exts.remove('VK_KHR_android_surface')
+    exts.remove('VK_KHR_xcb_surface')
+    exts.remove('VK_MVK_ios_surface')
+    exts.remove('VK_NN_vi_surface')
+    exts.remove('VK_QNX_screen_surface')
+
     # List of explicitly requested extension and all its dependencies
     extraexts = set()
     for name in results.extension:
diff --git a/scripts/extensionmetadocgenerator.py b/scripts/extensionmetadocgenerator.py
index 8583c891..97af569f 100644
--- a/scripts/extensionmetadocgenerator.py
+++ b/scripts/extensionmetadocgenerator.py
@@ -265,12 +265,12 @@ class Extension:
                       self.conventions.formatExtension(dep), enableQualifier),
                       file=fp)
         if self.provisional == 'true' and self.conventions.provisional_extension_warning:
-            write('  * *This is a _provisional_ extension and must: be used with caution.', file=fp)
+            write('  * This is a _provisional_ extension and must: be used with caution.', file=fp)
             write('    See the ' +
                   self.specLink(xrefName = 'boilerplate-provisional-header',
                                 xrefText = 'description',
                                 isRefpage = isRefpage) +
-                  ' of provisional header files for enablement and stability details.*', file=fp)
+                  ' of provisional header files for enablement and stability details.', file=fp)
         write('', file=fp)

         if self.deprecationType:
diff --git a/scripts/reflib.py b/scripts/reflib.py
index ec814c4a..e6106f6a 100644
--- a/scripts/reflib.py
+++ b/scripts/reflib.py
@@ -219,6 +219,11 @@ def nextPara(file, line):
     maxLine = len(file) - 1
     # Skip over current paragraph
     while (line != maxLine and not isempty(file[line])):
+        # LWJGL: Skip note blocks (may contain empty lines)
+        if (file[line] == '====\n'):
+            line = line + 1
+            while (line != maxLine and file[line] != '====\n'):
+                line = line + 1
         line = line + 1
     # Skip over white space
     while (line != maxLine and isempty(file[line])):
@@ -266,6 +271,10 @@ def clampToBlock(line, minline, maxline):

     return line

+# LWJGL: body/Description block detection
+regexListItem = re.compile('^(?:[/]|\s+[^/])')
+regexAnchorPrefix = re.compile('^:anchor-prefix:$')
+
 def fixupRefs(pageMap, specFile, file):
     """Fill in missing fields in pageInfo structures, to the extent they can be
     inferred.
@@ -326,6 +335,11 @@ def fixupRefs(pageMap, specFile, file):
                 pi.param = nextPara(file, pi.include)
                 if pi.body is None:
                     pi.body = nextPara(file, pi.param)
+                    # LWJGL: body/Description block detection
+                    while regexListItem.match(file[pi.body]):
+                        pi.body = nextPara(file, pi.body)
+                    if regexAnchorPrefix.match(file[pi.body]):
+                        pi.body = nextPara(file, pi.body)
             else:
                 if pi.body is None:
                     pi.body = nextPara(file, pi.include)
diff --git a/xml/vk.xml b/xml/vk.xml
index 7c724cb9..2fb6d50e 100644
--- a/xml/vk.xml
+++ b/xml/vk.xml
@@ -200,7 +200,7 @@ branch of the member gitlab server.

         <type category="basetype">struct <name>ANativeWindow</name>;</type>
         <type category="basetype">struct <name>AHardwareBuffer</name>;</type>
-        <type category="basetype">#ifdef __OBJC__
+        <!--<type category="basetype">#ifdef __OBJC__
 @class CAMetalLayer;
 #else
 typedef void <name>CAMetalLayer</name>;
@@ -235,7 +235,14 @@ typedef id&lt;MTLSharedEvent&gt; MTLSharedEvent_id;
 #else
 typedef void* <name>MTLSharedEvent_id</name>;
 #endif</type>
-        <type category="basetype">typedef struct __IOSurface* <name>IOSurfaceRef</name>;</type>
+        <type category="basetype">typedef struct __IOSurface* <name>IOSurfaceRef</name>;</type>-->
+        <type requires="QuartzCore.h" name="CAMetalLayer"/>
+        <type requires="Metal.h" name="MTLDevice_id"/>
+        <type requires="Metal.h" name="MTLCommandQueue_id"/>
+        <type requires="Metal.h" name="MTLBuffer_id"/>
+        <type requires="Metal.h" name="MTLTexture_id"/>
+        <type requires="Metal.h" name="MTLSharedEvent_id"/>
+        <type requires="IOSurface.h" name="IOSurfaceRef"/>

         <type category="basetype">typedef <type>uint32_t</type> <name>VkSampleMask</name>;</type>
         <type category="basetype">typedef <type>uint32_t</type> <name>VkBool32</name>;</type>
@@ -258,7 +265,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <type requires="vk_platform" name="int32_t"/>
         <type requires="vk_platform" name="int64_t"/>
         <type requires="vk_platform" name="size_t"/>
-        <type name="int"/>
+        <type requires="vk_platform" name="int"/>

             <comment>Bitmask types</comment>
         <type requires="VkFramebufferCreateFlagBits"      category="bitmask">typedef <type>VkFlags</type> <name>VkFramebufferCreateFlags</name>;</type>
@@ -992,9 +999,9 @@ typedef void* <name>MTLSharedEvent_id</name>;
         </type>
         <type category="struct" name="VkPhysicalDeviceMemoryProperties" returnedonly="true">
             <member><type>uint32_t</type>               <name>memoryTypeCount</name></member>
-            <member><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
+            <member len="memoryTypeCount"><type>VkMemoryType</type>           <name>memoryTypes</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
             <member><type>uint32_t</type>               <name>memoryHeapCount</name></member>
-            <member><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
+            <member len="memoryHeapCount"><type>VkMemoryHeap</type>           <name>memoryHeaps</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
         </type>
         <type category="struct" name="VkMemoryAllocateInfo">
             <member values="VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"><type>VkStructureType</type> <name>sType</name></member>
@@ -4041,7 +4048,6 @@ typedef void* <name>MTLSharedEvent_id</name>;
             <member><type>VkBool32</type>                         <name>computeDerivativeGroupQuads</name></member>
             <member><type>VkBool32</type>                         <name>computeDerivativeGroupLinear</name></member>
         </type>
-        <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"   alias="VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR"/>
         <type category="struct" name="VkPhysicalDeviceShaderImageFootprintFeaturesNV" structextends="VkPhysicalDeviceFeatures2,VkDeviceCreateInfo">
             <member values="VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true"><type>void</type>*                              <name>pNext</name></member>
@@ -4257,7 +4263,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
         <type category="struct" name="VkAccelerationStructureInfoNV">
             <member values="VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true">const <type>void</type>*                            <name>pNext</name></member>
-            <member><type>VkAccelerationStructureTypeNV</type>         <name>type</name></member>
+            <member><type>VkAccelerationStructureTypeKHR</type>         <name>type</name></member>
             <member optional="true"><type>VkBuildAccelerationStructureFlagsNV</type> <name>flags</name></member>
             <member optional="true"><type>uint32_t</type>               <name>instanceCount</name></member>
             <member optional="true"><type>uint32_t</type>               <name>geometryCount</name></member>
@@ -6602,6 +6608,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
             <member optional="true"><type>void</type>*  <name>pNext</name></member>
             <member><type>VkBool32</type>               <name>fragmentShaderBarycentric</name></member>
         </type>
+        <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"   alias="VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR"/>
         <type category="struct" name="VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR" returnedonly="true" structextends="VkPhysicalDeviceProperties2">
             <member values="VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR"><type>VkStructureType</type> <name>sType</name></member>
             <member optional="true"><type>void</type>*  <name>pNext</name></member>
@@ -8491,11 +8498,8 @@ typedef void* <name>MTLSharedEvent_id</name>;
     </enums>
     <enums name="VkPipelineCreationFeedbackFlagBits" type="bitmask">
         <enum bitpos="0"    name="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"/>
-        <enum               name="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"/>
         <enum bitpos="1"    name="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"/>
-        <enum               name="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"/>
         <enum bitpos="2"    name="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"/>
-        <enum               name="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"/>
     </enums>
     <enums name="VkFullScreenExclusiveEXT" type="enum">
         <enum value="0"     name="VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT"/>
@@ -8586,15 +8590,10 @@ typedef void* <name>MTLSharedEvent_id</name>;
     </enums>
     <enums name="VkToolPurposeFlagBits" type="bitmask">
         <enum bitpos="0"    name="VK_TOOL_PURPOSE_VALIDATION_BIT"/>
-        <enum               name="VK_TOOL_PURPOSE_VALIDATION_BIT_EXT"          alias="VK_TOOL_PURPOSE_VALIDATION_BIT"/>
         <enum bitpos="1"    name="VK_TOOL_PURPOSE_PROFILING_BIT"/>
-        <enum               name="VK_TOOL_PURPOSE_PROFILING_BIT_EXT"           alias="VK_TOOL_PURPOSE_PROFILING_BIT"/>
         <enum bitpos="2"    name="VK_TOOL_PURPOSE_TRACING_BIT"/>
-        <enum               name="VK_TOOL_PURPOSE_TRACING_BIT_EXT"             alias="VK_TOOL_PURPOSE_TRACING_BIT"/>
         <enum bitpos="3"    name="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"/>
-        <enum               name="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT" alias="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"/>
         <enum bitpos="4"    name="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"/>
-        <enum               name="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT"  alias="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"/>
     </enums>
     <enums name="VkFragmentShadingRateCombinerOpKHR" type="enum">
         <enum value="0" name="VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR"/>
@@ -8639,107 +8638,56 @@ typedef void* <name>MTLSharedEvent_id</name>;
     </enums>
     <enums name="VkAccessFlagBits2" type="bitmask" bitwidth="64">
         <enum value="0"     name="VK_ACCESS_2_NONE"/>
-        <enum               name="VK_ACCESS_2_NONE_KHR" alias="VK_ACCESS_2_NONE"/>
         <enum bitpos="0"    name="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR" alias="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"/>
         <enum bitpos="1"    name="VK_ACCESS_2_INDEX_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_INDEX_READ_BIT_KHR" alias="VK_ACCESS_2_INDEX_READ_BIT"/>
         <enum bitpos="2"    name="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR" alias="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"/>
         <enum bitpos="3"    name="VK_ACCESS_2_UNIFORM_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_UNIFORM_READ_BIT_KHR" alias="VK_ACCESS_2_UNIFORM_READ_BIT"/>
         <enum bitpos="4"    name="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"/>
         <enum bitpos="5"    name="VK_ACCESS_2_SHADER_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_SHADER_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_READ_BIT"/>
         <enum bitpos="6"    name="VK_ACCESS_2_SHADER_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_SHADER_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_WRITE_BIT"/>
         <enum bitpos="7"    name="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"/>
         <enum bitpos="8"    name="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"/>
         <enum bitpos="9"    name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"/>
         <enum bitpos="10"   name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"/>
         <enum bitpos="11"   name="VK_ACCESS_2_TRANSFER_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_TRANSFER_READ_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_READ_BIT"/>
         <enum bitpos="12"   name="VK_ACCESS_2_TRANSFER_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_WRITE_BIT"/>
         <enum bitpos="13"   name="VK_ACCESS_2_HOST_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_HOST_READ_BIT_KHR" alias="VK_ACCESS_2_HOST_READ_BIT"/>
         <enum bitpos="14"   name="VK_ACCESS_2_HOST_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_HOST_WRITE_BIT_KHR" alias="VK_ACCESS_2_HOST_WRITE_BIT"/>
         <enum bitpos="15"   name="VK_ACCESS_2_MEMORY_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_MEMORY_READ_BIT_KHR" alias="VK_ACCESS_2_MEMORY_READ_BIT"/>
         <enum bitpos="16"   name="VK_ACCESS_2_MEMORY_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_MEMORY_WRITE_BIT_KHR" alias="VK_ACCESS_2_MEMORY_WRITE_BIT"/>
-            <comment>bitpos 17-31 are specified by extensions to the original VkAccessFlagBits enum</comment>
         <enum bitpos="32"   name="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"/>
         <enum bitpos="33"   name="VK_ACCESS_2_SHADER_STORAGE_READ_BIT"/>
-        <enum               name="VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_READ_BIT"/>
         <enum bitpos="34"   name="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"/>
-        <enum               name="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"/>
     </enums>
     <enums name="VkPipelineStageFlagBits2" type="bitmask" bitwidth="64">
         <enum value="0"    name="VK_PIPELINE_STAGE_2_NONE"/>
-        <enum               name="VK_PIPELINE_STAGE_2_NONE_KHR" alias="VK_PIPELINE_STAGE_2_NONE"/>
         <enum bitpos="0"    name="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"/>
         <enum bitpos="1"    name="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"/>
         <enum bitpos="2"    name="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"/>
         <enum bitpos="3"    name="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"/>
         <enum bitpos="4"    name="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"/>
         <enum bitpos="5"    name="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"/>
         <enum bitpos="6"    name="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"/>
         <enum bitpos="7"    name="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"/>
         <enum bitpos="8"    name="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"/>
         <enum bitpos="9"    name="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"/>
         <enum bitpos="10"   name="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
         <enum bitpos="11"   name="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
         <enum bitpos="12"   name="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TRANSFER_BIT" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR"/>
-        <enum               name="VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
         <enum bitpos="13"   name="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"/>
         <enum bitpos="14"   name="VK_PIPELINE_STAGE_2_HOST_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_HOST_BIT_KHR" alias="VK_PIPELINE_STAGE_2_HOST_BIT"/>
         <enum bitpos="15"   name="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"/>
         <enum bitpos="16"   name="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
-            <comment>bitpos 17-31 are specified by extensions to the original VkPipelineStageFlagBits enum</comment>
         <enum bitpos="32"   name="VK_PIPELINE_STAGE_2_COPY_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_COPY_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COPY_BIT"/>
         <enum bitpos="33"   name="VK_PIPELINE_STAGE_2_RESOLVE_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_RESOLVE_BIT"/>
         <enum bitpos="34"   name="VK_PIPELINE_STAGE_2_BLIT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_BLIT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BLIT_BIT"/>
         <enum bitpos="35"   name="VK_PIPELINE_STAGE_2_CLEAR_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR" alias="VK_PIPELINE_STAGE_2_CLEAR_BIT"/>
         <enum bitpos="36"   name="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"/>
         <enum bitpos="37"   name="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"/>
         <enum bitpos="38"   name="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"/>
-        <enum               name="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"/>
     </enums>
     <enums name="VkSubmitFlagBits" type="bitmask">
         <enum bitpos="0"    name="VK_SUBMIT_PROTECTED_BIT"/>
-        <enum               name="VK_SUBMIT_PROTECTED_BIT_KHR" alias="VK_SUBMIT_PROTECTED_BIT"/>
     </enums>
     <enums name="VkEventCreateFlagBits" type="bitmask">
     </enums>
@@ -8892,67 +8840,37 @@ typedef void* <name>MTLSharedEvent_id</name>;
     </enums>
     <enums name="VkFormatFeatureFlagBits2" type="bitmask" bitwidth="64">
         <enum bitpos="0"    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"/>
         <enum bitpos="1"    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"/>
         <enum bitpos="2"    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"/>
         <enum bitpos="3"    name="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"/>
         <enum bitpos="4"    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"/>
         <enum bitpos="5"    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"/>
         <enum bitpos="6"    name="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"/>
         <enum bitpos="7"    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"/>
         <enum bitpos="8"    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"/>
         <enum bitpos="9"    name="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"/>
         <enum bitpos="10"   name="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"/>
         <enum bitpos="11"   name="VK_FORMAT_FEATURE_2_BLIT_DST_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_DST_BIT"/>
         <enum bitpos="12"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"/>
         <enum bitpos="13"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"/>
         <enum bitpos="14"   name="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"/>
         <enum bitpos="15"   name="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"/>
         <enum bitpos="16"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
         <enum bitpos="17"   name="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"/>
         <enum bitpos="18"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"/>
         <enum bitpos="19"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"/>
         <enum bitpos="20"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"/>
         <enum bitpos="21"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"/>
         <enum bitpos="22"   name="VK_FORMAT_FEATURE_2_DISJOINT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DISJOINT_BIT"/>
         <enum bitpos="23"   name="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"/>
         <enum bitpos="31"   name="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"/>
         <enum bitpos="32"   name="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"/>
         <enum bitpos="33"   name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"/>
-        <enum               name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"/>
     </enums>
     <enums name="VkRenderingFlagBits" type="bitmask">
         <enum bitpos="0"    name="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"/>
-        <enum               name="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR" alias="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"/>
         <enum bitpos="1"    name="VK_RENDERING_SUSPENDING_BIT"/>
-        <enum               name="VK_RENDERING_SUSPENDING_BIT_KHR" alias="VK_RENDERING_SUSPENDING_BIT"/>
         <enum bitpos="2"    name="VK_RENDERING_RESUMING_BIT"/>
-        <enum               name="VK_RENDERING_RESUMING_BIT_KHR" alias="VK_RENDERING_RESUMING_BIT"/>
     </enums>
     <enums name="VkVideoEncodeH265CapabilityFlagBitsEXT" type="bitmask">
         <enum bitpos="0"      name="VK_VIDEO_ENCODE_H265_CAPABILITY_SEPARATE_COLOUR_PLANE_BIT_EXT"/>
@@ -14329,6 +14247,9 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkCommandBufferInheritanceRenderingInfoKHR"/>
                 <type name="VkRenderingFlagsKHR"/>
                 <type name="VkRenderingFlagBitsKHR"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR" alias="VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_SUSPENDING_BIT_KHR" alias="VK_RENDERING_SUSPENDING_BIT"/>
+                <enum extends="VkRenderingFlagBits"                             name="VK_RENDERING_RESUMING_BIT_KHR" alias="VK_RENDERING_RESUMING_BIT"/>
             </require>
             <require extension="VK_KHR_fragment_shading_rate">
                 <enum bitpos="21" extends="VkPipelineCreateFlagBits"                name="VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"/>
@@ -14844,7 +14765,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
             </require>
             <require extension="VK_KHR_descriptor_update_template">
                 <command name="vkCmdPushDescriptorSetWithTemplateKHR"/>
-                <enum value="1" extends="VkDescriptorUpdateTemplateType"    name="VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR" comment="Create descriptor update template for pushed descriptor updates"/>
+                <!--<enum value="1" extends="VkDescriptorUpdateTemplateType"    name="VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR" comment="Create descriptor update template for pushed descriptor updates"/>-->
             </require>
         </extension>
         <extension name="VK_EXT_conditional_rendering" number="82" type="device" author="NV" contact="Vikram Kushwaha @vkushwaha" supported="vulkan">
@@ -16461,6 +16382,9 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkPipelineCreationFeedbackFlagsEXT"/>
                 <type name="VkPipelineCreationFeedbackCreateInfoEXT"/>
                 <type name="VkPipelineCreationFeedbackEXT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"/>
+                <enum extends="VkPipelineCreationFeedbackFlagBits"          name="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT" alias="VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"/>
             </require>
         </extension>
         <extension name="VK_GOOGLE_extension_194" number="194" author="GOOGLE" contact="Jean-Francois Roy @jfroy" supported="disabled">
@@ -16756,7 +16680,7 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkMetalSurfaceCreateFlagsEXT"/>
                 <type name="VkMetalSurfaceCreateInfoEXT"/>
                 <command name="vkCreateMetalSurfaceEXT"/>
-                <type name="CAMetalLayer"/>
+                <!--<type name="CAMetalLayer"/>-->
             </require>
         </extension>
         <extension name="VK_EXT_fragment_density_map" number="219" type="device" requires="VK_KHR_get_physical_device_properties2" author="EXT" contact="Matthew Netsch @mnetsch" supported="vulkan">
@@ -17026,12 +16950,17 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type                                                       name="VkToolPurposeFlagsEXT"/>
                 <type                                                       name="VkPhysicalDeviceToolPropertiesEXT"/>
                 <command                                                    name="vkGetPhysicalDeviceToolPropertiesEXT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_VALIDATION_BIT_EXT"          alias="VK_TOOL_PURPOSE_VALIDATION_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_PROFILING_BIT_EXT"           alias="VK_TOOL_PURPOSE_PROFILING_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_TRACING_BIT_EXT"             alias="VK_TOOL_PURPOSE_TRACING_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT" alias="VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"/>
+                <enum extends="VkToolPurposeFlagBits"                       name="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT"  alias="VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"/>
             </require>
             <require extension="VK_EXT_debug_report">
-                <enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
+                <!--<enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>-->
             </require>
             <require extension="VK_EXT_debug_marker">
-                <enum bitpos="6" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>
+                <!--<enum bitpos="6" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"/>-->
             </require>
             <require extension="VK_EXT_debug_utils">
                 <enum bitpos="5" extends="VkToolPurposeFlagBits"            name="VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"/>
@@ -17827,12 +17756,12 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type name="VkImportMetalIOSurfaceInfoEXT"/>
                 <type name="VkExportMetalSharedEventInfoEXT"/>
                 <type name="VkImportMetalSharedEventInfoEXT"/>
-                <type name="MTLDevice_id"/>
+                <!--<type name="MTLDevice_id"/>
                 <type name="MTLCommandQueue_id"/>
                 <type name="MTLBuffer_id"/>
                 <type name="MTLTexture_id"/>
                 <type name="MTLSharedEvent_id"/>
-                <type name="IOSurfaceRef"/>
+                <type name="IOSurfaceRef"/>-->
                 <command name="vkExportMetalObjectsEXT"/>
             </require>
         </extension>
@@ -17886,6 +17815,54 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <command name="vkCmdPipelineBarrier2KHR"/>
                 <command name="vkCmdWriteTimestamp2KHR"/>
                 <command name="vkQueueSubmit2KHR"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_NONE_KHR" alias="VK_PIPELINE_STAGE_2_NONE"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
+				<enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_HOST_BIT_KHR" alias="VK_PIPELINE_STAGE_2_HOST_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_COPY_BIT_KHR" alias="VK_PIPELINE_STAGE_2_COPY_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR" alias="VK_PIPELINE_STAGE_2_RESOLVE_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_BLIT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_BLIT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR" alias="VK_PIPELINE_STAGE_2_CLEAR_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR" alias="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"/>
+                <enum extends="VkPipelineStageFlagBits2"                    name="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR" alias="VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_NONE_KHR" alias="VK_ACCESS_2_NONE"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR" alias="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INDEX_READ_BIT_KHR" alias="VK_ACCESS_2_INDEX_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR" alias="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_UNIFORM_READ_BIT_KHR" alias="VK_ACCESS_2_UNIFORM_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR" alias="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_TRANSFER_READ_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR" alias="VK_ACCESS_2_TRANSFER_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_HOST_READ_BIT_KHR" alias="VK_ACCESS_2_HOST_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_HOST_WRITE_BIT_KHR" alias="VK_ACCESS_2_HOST_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_MEMORY_READ_BIT_KHR" alias="VK_ACCESS_2_MEMORY_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_MEMORY_WRITE_BIT_KHR" alias="VK_ACCESS_2_MEMORY_WRITE_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_READ_BIT"/>
+                <enum extends="VkAccessFlagBits2"                           name="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR" alias="VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"/>
+                <enum extends="VkSubmitFlagBits"                            name="VK_SUBMIT_PROTECTED_BIT_KHR" alias="VK_SUBMIT_PROTECTED_BIT"/>
             </require>
             <require extension="VK_EXT_transform_feedback">
                 <enum bitpos="24" extends="VkPipelineStageFlagBits2"        name="VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT"/>
@@ -18420,6 +18397,33 @@ typedef void* <name>MTLSharedEvent_id</name>;
                 <type                                                       name="VkFormatFeatureFlags2KHR"/>
                 <type                                                       name="VkFormatFeatureFlagBits2KHR"/>
                 <type                                                       name="VkFormatProperties3KHR"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_BLIT_DST_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR" alias="VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_DISJOINT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR" alias="VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR" alias="VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"/>
+                <enum extends="VkFormatFeatureFlagBits2"                    name="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR" alias="VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"/>
             </require>
         </extension>
         <extension name="VK_EXT_extension_362" number="362" author="EXT" contact="Lionel Duc @nvlduc" supported="disabled">
--
2.30.2.windows.1

